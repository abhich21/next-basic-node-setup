{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "PrepInsta  NodeJs Backend",
    "description": " API's are Written in NodeJS,API's listed in this document are only specific to this  Backend, all API's have authorization for accessing them.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "contact": {
      "email": "Jai@yopmail.com"
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:4200/api/v2",
      "description": "local"
    },
    {
      "url": "https://primebackenddev2.prepinstaprime.com/api/v2/",
      "description": "dev"
    },
    {
      "url": "https://primebackendprod2.prepinstaprime.com/api/v2/",
      "description": "prod"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Single User creation",
        "parameters": [],
        "requestBody": {
          "description": "Single User Creation",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/SingleUserObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserSuccessObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserSuccessObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Users list",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "user_email",
            "in": "query",
            "type": "string",
            "description": "search by email"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "number",
            "description": "search by phone"
          },
          {
            "name": "year_of_passing",
            "in": "query",
            "type": "number",
            "description": "search by year_of_passing"
          },
          {
            "name": "PrepId",
            "in": "query",
            "type": "number",
            "description": "search by PrepId"
          },
          {
            "name": "PrimeId",
            "in": "query",
            "type": "number",
            "description": "search by PrimeId"
          },
          {
            "name": "user_registered",
            "in": "query",
            "type": "date",
            "description": "search by user_registered"
          },
          {
            "name": "user_acquisition_source",
            "in": "query",
            "type": "string",
            "description": "search by user_acquisition_source"
          },
          {
            "name": "college_id",
            "in": "query",
            "type": "number",
            "description": "search by college_id"
          },
          {
            "name": "college_name",
            "in": "query",
            "type": "string",
            "description": "search by college_name"
          },
          {
            "name": "user_name",
            "in": "query",
            "type": "string",
            "description": "search by user_name"
          },
          {
            "name": "branch_id",
            "in": "query",
            "type": "number",
            "description": "search by branch_id"
          },
          {
            "name": "registration_number",
            "in": "query",
            "type": "string",
            "description": "search by registration_number"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UsersObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UsersObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "UserId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserSuccessObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserSuccessObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "type": "string",
            "description": "Id of the User",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UpdateUserForm"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateUserForm"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserUpdatedObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserUpdatedObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "UserId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserDeletedObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserDeletedObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/uploadFile": {
      "post": {
        "summary": "Upload file",
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "req body",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/definitions/UploadFileObject"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UploadFileSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UploadFileSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/fetch/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Fetch user profile data",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserProfileResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/userImport/fileUpload" : {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "FileUpload List",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "ImporterUserId",
            "in": "query",
            "type": "string",
            "description": "search by ImporterUserId"
          },
          {
            "name": "ImportBy",
            "in": "query",
            "type": "string",
            "description": "search by ImportBy"
          },
          {
            "name": "S3FilePath",
            "in": "query",
            "type": "string",
            "description": "search by S3FilePath"
          },
          {
            "name": "ValidationErrorFilePath",
            "in": "query",
            "type": "string",
            "description": "search by ValidationErrorFilePath"
          },
          {
            "name": "DuplicacyErrorFilePath",
            "in": "query",
            "type": "string",
            "description": "search by DuplicacyErrorFilePath"
          },
          {
            "name": "SuccessfulInsertions",
            "in": "query",
            "type": "number",
            "description": "search by SuccessfulInsertions"
          },
          {
            "name": "TotalRecords",
            "in": "query",
            "type": "number",
            "description": "search by TotalRecords"
          },
          {
            "name": "ValidationErrors",
            "in": "query",
            "type": "number",
            "description": "search by ValidationErrors"
          },
          {
            "name": "ErrorsCount",
            "in": "query",
            "type": "number",
            "description": "search by ErrorsCount"
          },
          {
            "name": "Notes",
            "in": "query",
            "type": "string",
            "description": "search by Notes"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/FileUploadListRes"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/FileUploadListRes"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/userImport/failedUserSync" : {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "FileUpload FailedUsersSync",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "number",
            "description": "search by phone"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "search by email"
          },
          {
            "name": "UserImportFileUploadId",
            "in": "query",
            "type": "string",
            "description": "search by UserImportFileUploadId"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/FailedUsersSyncObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/FailedUsersSyncObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "summary": "admin",
        "tags": [
          "admin/subadmin"
        ],
        "requestBody": {
          "description": "Admin body",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/update": {
      "put": {
        "tags": [
          "admin/subadmin"
        ],
        "summary": "update admin and subadmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/admin/forgot/pass": {
      "post": {
        "summary": "admin",
        "tags": [
          "admin/subadmin"
        ],
        "requestBody": {
          "description": "forgot password",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/forgotpass"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/forgotpass"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/reset/pass": {
      "put": {
        "summary": "admin",
        "tags": [
          "admin/subadmin"
        ],
        "requestBody": {
          "description": "reset password",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/resetpass"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/resetpass"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/collegeList": {
      "get": {
        "tags": [
          "collegeList"
        ],
        "summary": "collegelist",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "required": true,
            "description": "Name college",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/CampusAmbassador": {
      "post": {
        "tags": [
          "CampusAmbassador"
        ],
        "summary": "register CampusAmbassador",
        "parameters": [],
        "requestBody": {
          "description": "CampusAmbassador Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CampusAmbassador"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "CampusAmbassador"
        ],
        "summary": "get registeration list",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "search by email"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "search by name"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "number",
            "description": "search by phone"
          },
          {
            "name": "year_of_passing",
            "in": "query",
            "type": "number",
            "description": "search by year_of_passing"
          },
          {
            "name": "CollegeName",
            "in": "query",
            "type": "string",
            "description": "search by CollegeName"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/CampusAmbassador/{ambassadorId}": {
      "get": {
        "tags": [
          "CampusAmbassador"
        ],
        "summary": "Get CampusAmbassador by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "ambassadorId",
            "in": "path",
            "type": "string",
            "description": "ID of the Campus Ambassador",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Campus Ambassador not found."
          }
        }
      },
      "put": {
        "tags": [
          "CampusAmbassador"
        ],
        "summary": "Update CampusAmbassador by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "ambassadorId",
            "in": "path",
            "type": "string",
            "description": "ID of the Campus Ambassador",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update CampusAmbassador Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CampusAmbassador"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Campus Ambassador not found."
          }
        }
      },
      "delete": {
        "tags": [
          "CampusAmbassador"
        ],
        "summary": "Delete CampusAmbassador by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "ambassadorId",
            "in": "path",
            "type": "string",
            "description": "ID of the Campus Ambassador",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Campus Ambassador not found."
          }
        }
      }
    },
    "/admin/createSubadmin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create a new subadmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/admin/subAdmin/{subAdminid}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "update subadmin ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdmin Id",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/admin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get subadmin profile",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdminid Id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete subadmin",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdminid id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/category"
            }
          },
          "409": {
            "description": "Failed . userdata confliction"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/admin/change/pass": {
      "put": {
        "summary": "Update user password",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/updateUserPassword"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/updateUserPassword"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "409": {
            "description": "Failed . userdata confliction"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/admin/allSubadmin": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get side bar for admin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "firstname",
            "in": "query",
            "type": "string",
            "description": "search by name"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "search by name"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/admin/adminData": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get profile for admin/subadmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/admin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/admin/logout": {
      "post": {
        "summary": "Logout an admin",
        "tags": [
          "admin/subadmin"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/logoutObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/logoutObject"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/checktoken": {
      "get": {
        "summary": "check admin token",
        "tags": [
          "admin/subadmin"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/logoutObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/logoutObject"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/iam": {
      "get": {
        "tags": [
          "iam-modules"
        ],
        "summary": "all iam  module  list",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "post": {
        "tags": [
          "iam-modules"
        ],
        "summary": "add IAM module",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/moduleAdd"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/updateOrg"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/demoVideos": {
      "post": {
        "tags": ["DemoVideos"],
        "summary": "Create DemoVideos",
        "requestBody": {
          "description": "DemoVideos object to create",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/definitions/DemoVideos" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/definitions/DemoVideos" } } } },
          "400": { "description": "Bad request" }
        }
      },
      "get": {
        "tags": ["DemoVideos"],
        "summary": "Get all DemoVideos",
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/definitions/DemoVideos" } } } } },
          "500": { "description": "Internal server error" }
        }
      }
    },
    "/demoVideos/{id}": {
      "get": {
        "tags": ["DemoVideos"],
        "summary": "Get DemoVideos by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/definitions/DemoVideos" } } } },
          "404": { "description": "Not found" }
        }
      },
      "put": {
        "tags": ["DemoVideos"],
        "summary": "Update DemoVideos by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "description": "DemoVideos object to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/definitions/DemoVideos" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/definitions/DemoVideos" } } } },
          "400": { "description": "Bad request" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["DemoVideos"],
        "summary": "Delete DemoVideos by ID (soft delete)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/iam/{iamId}": {
      "delete": {
        "tags": [
          "iam-modules"
        ],
        "summary": "delete module/role",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "iamId",
            "in": "path",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "tags": [
          "iam-modules"
        ],
        "summary": "edit iam module",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "iamId",
            "in": "path",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/moduleAdd"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/moduleAdd"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/iam/assign": {
      "get": {
        "tags": [
          "iam-User"
        ],
        "summary": "get modules for admin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/iam/assign/{adminId}": {
      "post": {
        "tags": [
          "iam-User"
        ],
        "summary": "assign iam to admin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "adminId",
            "in": "path",
            "required": true,
            "description": "adminId",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/moduleAddpri"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/privilege"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "iam-User"
        ],
        "summary": "iam user module  list this",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "adminId",
            "in": "path",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/ActivityTrail": {
      "get": {
        "tags": [
          "Live user data"
        ],
        "summary": "Live user data",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "search by email"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/ActivityTrail/{activityId}": {
      "put": {
        "tags": [
          "Live user data"
        ],
        "summary": "update activity status",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "type": "string",
            "description": "activityID"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/updateActivity"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/updateActivity"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/ManageTeams": {
      "post": {
        "tags": [
          "manage teams"
        ],
        "summary": "add teams",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/ManageTeams"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManageTeams"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "manage teams"
        ],
        "summary": "get all teams",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "search by team"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ManageTeams"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/ManageTeams/{TeamId}": {
      "get": {
        "tags": [
          "manage teams"
        ],
        "summary": "get One Team details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "description": "TeamId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "tags": [
          "manage teams"
        ],
        "summary": "edit iam module",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "description": "team id",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/updateTeam"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/updateTeam"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "tags": [
          "manage teams"
        ],
        "summary": "delete module/role",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "TeamId",
            "in": "path",
            "required": true,
            "description": "team Id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/updateTeam"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/college": {
      "post": {
        "tags": [
          "partnered college"
        ],
        "summary": "add college",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/PartneredCollege"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManageCollege"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "partnered college"
        ],
        "summary": "get all college",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "search by CollegeName"
          },
          {
            "name": "collegeCode",
            "in": "query",
            "type": "string",
            "description": "search by CollegeName"
          },
          {
            "name": "collegeId",
            "in": "query",
            "type": "number",
            "description": "search by collegeId"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/PartneredCollege"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/college/{collegeId}": {
      "get": {
        "tags": [
          "partnered college"
        ],
        "summary": "get One Team details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "collegeId",
            "in": "path",
            "required": true,
            "description": "collegeId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "tags": [
          "partnered college"
        ],
        "summary": "update college details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collegeId",
            "in": "path",
            "required": true,
            "description": "college Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UpdateCollege"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UpdateCollege"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "tags": [
          "partnered college"
        ],
        "summary": "delete module/role",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collegeId",
            "in": "path",
            "required": true,
            "description": "college Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UpdateCollege"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/college/disassociate/{collegeId}": {
      "put": {
        "tags": [
          "partnered college"
        ],
        "summary": "disassociate admin,branch and plan ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collegeId",
            "in": "path",
            "required": true,
            "description": "college Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "description": "provide value if you're disassociating admin then admin else branch or plan",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "provide  mongodb Id of above value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UpdateCollege"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/college/studentReport": {
      "get": {
        "tags": [
          "partnered college"
        ],
        "summary": "Get college student course progress report",
        "description": "Returns paginated student statistics (started/completed courses, completion %) for a specific college.",
        "parameters": [
          {
            "name": "accesstoken",
            "in": "header",
            "description": "Access token for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collegeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65bdf014bcb46172a5619e5b"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023"
            }
          },
          {
            "name": "CourseId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "676d37f528b3e100e15d3328"
            }
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 117
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with total students and their course statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "res": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 6
                        },
                        "students": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "UserId": {
                                "type": "string",
                                "example": "67ed210324784f0013e88ecc"
                              },
                              "first_name": {
                                "type": "string",
                                "example": "Rahul"
                              },
                              "last_name": {
                                "type": "string",
                                "example": ""
                              },
                              "registration_number": {
                                "type": "string",
                                "example": ""
                              },
                              "user_email": {
                                "type": "string",
                                "example": "rahul.paswan@adda247.com"
                              },
                              "branch_id": {
                                "type": "string",
                                "example": ""
                              },
                              "year_of_passing": {
                                "type": "integer",
                                "example": 2023
                              },
                              "coursesStarted": {
                                "type": "integer",
                                "example": 22
                              },
                              "coursesCompleted": {
                                "type": "integer",
                                "example": 0
                              },
                              "CourseCompletionPercentage": {
                                "type": "number",
                                "format": "float",
                                "example": 2.65
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "College not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/college/studentReport/download": {
      "get": {
        "tags": [
          "partnered college"
        ],
        "summary": "Get college student course progress report",
        "description": "Returns paginated student statistics (started/completed courses, completion %) for a specific college.",
        "parameters": [
          {
            "name": "accesstoken",
            "in": "header",
            "description": "Access token for authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collegeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65bdf014bcb46172a5619e5b"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2023"
            }
          },
          {
            "name": "CourseId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "676d37f528b3e100e15d3328"
            }
          },
          {
            "name": "branch_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 117
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with download link and file name of the student report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "res": {
                      "type": "object",
                      "properties": {
                        "downloadLink": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://optimus-files.prepinstaprime.com/student_report/student_report_2025-05-27T13-36-52-876Z.csv"
                        },
                        "name": {
                          "type": "string",
                          "example": "student_report_2025-05-27T13-36-52-876Z.csv"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "College not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/UserForm": {
      "post": {
        "tags": [
          "UserFormData"
        ],
        "summary": "register Users ",
        "parameters": [],
        "requestBody": {
          "description": "User collection data",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserForm"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserForm"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "UserFormData"
        ],
        "summary": "get registeration list",
        "parameters": [
          {
            "name": "formName",
            "in": "query",
            "type": "string",
            "description": "formName value"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "source",
            "in": "query",
            "type": "string",
            "description": "search by source"
          },
          {
            "name": "year_of_passing",
            "in": "query",
            "type": "number",
            "description": "search by year_of_passing"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampusAmbassador"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "user login",
        "tags": [
          "user-auth"
        ],
        "requestBody": {
          "description": "Admin body",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/admin/totalCounts": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "/Total Counts",
        "description": "This endpoint retrieves the total counts of admins, sub-admins, and teams.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "totalAdmins": {
                  "type": "integer",
                  "description": "The total number of admins"
                },
                "totalSubAdmins": {
                  "type": "integer",
                  "description": "The total number of sub-admins"
                },
                "totalTeams": {
                  "type": "integer",
                  "description": "The total number of teams"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "The error message"
                }
              }
            }
          }
        }
      }
    },
    "/branch": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "add branch",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/Branch"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "get all branch",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "search by branchName"
          },
          {
            "name": "branchCode",
            "in": "query",
            "type": "string",
            "description": "search by branchCode"
          },
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "description": "search by branchCode"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/branch/{branchId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "get One Team details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "description": "branchId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/moduleAdd"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "tags": [
          "Branch"
        ],
        "summary": "Update Branch by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "branchId",
            "in": "path",
            "type": "string",
            "description": "ID of the Branch",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update Branch Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/Branch"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Branch not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "summary": "Delete Branch by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "branchId",
            "in": "path",
            "type": "string",
            "description": "ID of the Branch",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Branch"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Branch not found."
          }
        }
      }
    },
    "/plan": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "add plan",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Plan Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "get all plans",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "description": "search by planTitle"
          },
          {
            "name": "discount",
            "in": "query",
            "type": "string",
            "description": "search by discountCoupon"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "number",
            "description": "search by planDuration"
          },
          {
            "name": "planType",
            "in": "query",
            "type": "number",
            "description": "search by Type of the plan (1: B2B, 2: B2C)"
          },
          {
            "name": "discountType",
            "in": "query",
            "type": "number",
            "description": "search by Type of discount (1: Percentage, 2: Number Discount)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Plan"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/plan/{planId}": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "get One Plan details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "description": "planId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Plan"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "put": {
        "tags": [
          "Plan"
        ],
        "summary": "Update Plan by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "planId",
            "in": "path",
            "type": "string",
            "description": "ID of the Plan",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update Plan Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Plan not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Plan"
        ],
        "summary": "Delete Plan by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "planId",
            "in": "path",
            "type": "string",
            "description": "ID of the Plan",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          },
          "400": {
            "description": "Failed. Bad request data."
          },
          "404": {
            "description": "Plan not found."
          }
        }
      }
    },
    "/CollegeAdmin/login": {
      "post": {
        "summary": "CollegeAdmin",
        "tags": [
          "CollegeAdmin"
        ],
        "requestBody": {
          "description": "Admin body",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/loginObject"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/CollegeAdmin/createSubadmin": {
      "post": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "Create a new subadmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CollegeAdmin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CollegeAdmin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/CollegeAdmin/subAdmin/{subAdminid}": {
      "put": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "update subadmin ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdmin Id",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CollegeAdmin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/definitions/CollegeAdmin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CollegeAdmin"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "get subadmin profile",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdminid Id",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "delete subadmin",
        "tags": [
          "CollegeAdmin"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "subAdminid",
            "in": "path",
            "required": true,
            "description": "subAdminid id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/category"
            }
          },
          "409": {
            "description": "Failed . userdata confliction"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/CollegeAdmin/change/pass": {
      "put": {
        "summary": "Update user password",
        "tags": [
          "CollegeAdmin"
        ],
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/updateCollegeAdminPassword"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/updateCollegeAdminPassword"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "409": {
            "description": "Failed . userdata confliction"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. User not found."
          }
        }
      }
    },
    "/CollegeAdmin/allSubadmin": {
      "get": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "get side bar for CollegeAdmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "in": "query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "description": "page number"
          },
          {
            "name": "firstname",
            "in": "query",
            "type": "string",
            "description": "search by name"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "search by name"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/CollegeAdmin/adminData": {
      "get": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "get profile for CollegeAdmin/subadmin",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CollegeAdmin"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/CollegeAdmin/totalCounts": {
      "get": {
        "tags": [
          "CollegeAdmin"
        ],
        "summary": "/Total Counts",
        "description": "This endpoint retrieves the total counts of CollegeAdmin, sub-admins, and teams.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "totalAdmins": {
                  "type": "integer",
                  "description": "The total number of CollegeAdmins"
                },
                "totalSubAdmins": {
                  "type": "integer",
                  "description": "The total number of sub-admins"
                },
                "totalTeams": {
                  "type": "integer",
                  "description": "The total number of teams"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "The error message"
                }
              }
            }
          }
        }
      }
    },
    "/quiz": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "summary": "Create a new Quiz",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Quiz Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/QuizObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/QuizObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuizCreateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "Fetch Quiz List",
        "description": "This endpoint retrieves the total counts of Quiz.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "QuizName",
            "in": "query",
            "type": "string",
            "description": "Quiz Name",
            "required": false
          },
          {
            "name": "QuizDescription",
            "in": "query",
            "type": "string",
            "description": "Quiz Description",
            "required": false
          },
          {
            "name": "QuizType",
            "in": "query",
            "type": "string",
            "description": "Quiz Type",
            "required": false
          },
          {
            "name": "TotalQuestions",
            "in": "query",
            "type": "Number",
            "description": "Total Questions",
            "required": false
          },
          {
            "name": "ClonedIn",
            "in": "query",
            "type": "array",
            "description": "Courses id those using this quiz",
            "required": false
          },
          {
            "name": "tags",
            "in": "query",
            "type": "array",
            "description": "Tags present in quiz",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuizListObject"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/quiz/{quizId}": {
      "put": {
        "tags": [
          "Quiz"
        ],
        "summary": "update Quiz ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "path",
            "type": "string",
            "description": "Id of the quiz",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Quiz Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/QuizObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/QuizObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuizUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "Get Quiz",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "path",
            "type": "string",
            "description": "Id of the quiz",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/SingleQuizObject"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete quiz",
        "tags": [
          "Quiz"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "path",
            "type": "string",
            "description": "Id of the quiz",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuizDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/quiz/getQuiz/{quizId}": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "Get Quiz details with questions",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "path",
            "type": "string",
            "description": "Id of the quiz",
            "required": true
          },
          {
            "name": "SectionId",
            "in": "query",
            "type": "string",
            "description": "SectionId",
            "required": true
          },
          {
            "name": "ModuleId",
            "in": "query",
            "type": "string",
            "description": "ModuleId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/QuizDetailsSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/QuizDetailsSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/question": {
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Create a new Question",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Question Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/QuestionInputObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/QuestionInputObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuestionCreateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Fetch Question List",
        "description": "This endpoint retrieves the total counts of Question.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "QuizId",
            "in": "query",
            "type": "string",
            "description": "Quiz Id",
            "required": false
          },
          {
            "name": "QuestionType",
            "in": "query",
            "type": "string",
            "description": "Question Type",
            "required": false
          },
          {
            "name": "DefaultMarks",
            "in": "query",
            "type": "Number",
            "description": "Default Marks",
            "required": false
          },
          {
            "name": "PenaltyMarks",
            "in": "query",
            "type": "Number",
            "description": "Penalty MarksId",
            "required": false
          },
          {
            "name": "DisplayIndex",
            "in": "query",
            "type": "Number",
            "description": "Display Index",
            "required": false
          },
          {
            "name": "question",
            "in": "query",
            "type": "string",
            "description": "question",
            "required": false
          },
          {
            "name": "explanation",
            "in": "query",
            "type": "string",
            "description": "explanation",
            "required": false
          },
          {
            "name": "tags",
            "in": "query",
            "type": "array",
            "description": "tags",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/QuizResponseObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/QuizResponseObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/question/{questionId}": {
      "put": {
        "tags": [
          "Question"
        ],
        "summary": "Update question ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "type": "string",
            "description": "Id of the question",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Quiz Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/QuestionInputObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/QuestionInputObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuestionUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Get Question",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "type": "string",
            "description": "Id of the question",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/QuestionObject"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/QuestionObject"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete quiz",
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "questionId",
            "in": "path",
            "type": "string",
            "description": "Id of the question",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/QuestionDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/courses/getCourse/details": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get Course Details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "CourseName",
            "in": "query",
            "type": "string",
            "description": "Course name",
            "required": false
          },
          {
            "name": "CourseSlug",
            "in": "query",
            "type": "string",
            "description": "Course Slug",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/CourseSearchResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CourseSearchResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/courses/search/popular": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get Popular Courses",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the User",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/PopularCoursesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courses/search": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Search Courses",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the User",
            "type": "string"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "type": "string",
            "description": "searchTerm",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "type": "number",
            "description": "page",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "number",
            "description": "limit",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CourseSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courses" : {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get Course List",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of an admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "number",
            "description": "page",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "number",
            "description": "limit",
            "required": false
          },
          {
            "name": "projection",
            "in": "query",
            "type": "string",
            "description": "projection coma sepateted",
            "example" : "CourseName:1,CourseTitle:1,_id:1",
            "required": false
          },
          {
            "name": "CourseName",
            "in": "query",
            "type": "string",
            "description": "CourseName",
            "required": false
          },
          {
            "name": "CourseUrl",
            "in": "query",
            "type": "string",
            "description": "CourseUrl",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CourseSearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/primeHome/categoryCourses": {
      "get": {
        "tags": [
          "PrimeHome"
        ],
        "summary": "Get Category Courses",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the User",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/CategoryCoursesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/primeHome/details": {
      "get": {
        "tags": [
          "PrimeHome"
        ],
        "summary": "Get Category Courses",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the User",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/PrimeHomeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/primeHome/getOne/categoryCourses/{title}": {
      "get": {
        "tags": [
          "PrimeHome"
        ],
        "summary": "Get Courses by Category",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the User",
            "type": "string"
          },
          {
            "name": "title",
            "in": "path",
            "type": "string",
            "description": "title"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "res": {
                  "type": "object",
                  "properties": {
                    "courses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "6775265e82ee096f081e1624"
                          },
                          "courseId": {
                            "type": "object",
                            "properties": {
                              "CoursePreviewImages": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/01/ReactJSCarouselImage1.webp"
                                }
                              },
                              "TotalSections": {
                                "type": "integer",
                                "example": 9
                              },
                              "TotalVideos": {
                                "type": "integer",
                                "example": 80
                              },
                              "CertificationEligibility": {
                                "type": "boolean",
                                "example": false
                              },
                              "GradientColors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "EnrolledUsersCount": {
                                "type": "integer",
                                "example": 0
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "language": {
                                "type": "string",
                                "example": "English"
                              },
                              "level": {
                                "type": "string",
                                "example": "Intermediate"
                              },
                              "MoreSections": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "_id": {
                                "type": "string",
                                "example": "676fe07e4078fc5cb2c980b6"
                              },
                              "CourseName": {
                                "type": "string",
                                "example": "React JS"
                              },
                              "CourseTitle": {
                                "type": "string",
                                "example": "Get this course and other 200+ courses under PrepInsta Prime"
                              },
                              "CourseSubtitle": {
                                "type": "string",
                                "example": "Get a free assessment through India's leading online platform for assessments and recruitment, included with PrepInsta Prime"
                              },
                              "CourseUrl": {
                                "type": "string",
                                "example": "https://prepinstaprime.com/course/reactjs"
                              },
                              "CourseThumbnail": {
                                "type": "string",
                                "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/01/ReactJSCarouselImage7.webp"
                              },
                              "CourseRating": {
                                "type": "integer",
                                "example": 5
                              },
                              "CourseSyllabusPageUrl": {
                                "type": "string",
                                "example": "https://prepinstaprime.com/syllabus/full-stack-syllabus"
                              },
                              "CourseDemoVideoUrl": {
                                "type": "string",
                                "example": "#"
                              },
                              "TotalDuration": {
                                "type": "string",
                                "example": "16h+"
                              }
                            }
                          },
                          "courseName": {
                            "type": "string",
                            "example": "React JS"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCourse/categoryCourses": {
      "get": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Fetch Course List",
        "description": "This endpoint retrieves the total counts of Courses.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "CourseId",
            "in": "query",
            "type": "string",
            "description": "CourseId",
            "required": false
          },
          {
            "name": "UserId",
            "in": "query",
            "type": "string",
            "description": "UserId",
            "required": false
          },
          {
            "name": "CurrentModule",
            "in": "query",
            "type": "string",
            "description": "CurrentModuleId",
            "required": false
          },
          {
            "name": "CurrentSection",
            "in": "query",
            "type": "string",
            "description": "CurrentSectionId",
            "required": false
          },
          {
            "name": "TotalVideosWatched",
            "in": "query",
            "type": "Number",
            "description": "TotalVideosWatched",
            "required": false
          },
          {
            "name": "TotalQuizAttempted",
            "in": "query",
            "type": "Number",
            "description": "TotalQuizAttempted",
            "required": false
          },
          {
            "name": "CourseCompletionPercentage",
            "in": "query",
            "type": "Number",
            "description": "CourseCompletionPercentage",
            "required": false
          },
          {
            "name": "TotalSectionCompleted",
            "in": "query",
            "type": "Number",
            "description": "TotalSectionCompleted",
            "required": false
          },
          {
            "name": "TotalSections",
            "in": "query",
            "type": "Number",
            "description": "TotalSections",
            "required": false
          },
          {
            "name": "TotalCourseHoursSpent",
            "in": "query",
            "type": "string",
            "description": "TotalCourseHoursSpent",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserCoursesListSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserCoursesListSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/userCourse": {
      "post": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Create User course mapping",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Course Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserCourseObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCourseObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionCreationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Fetch Course List",
        "description": "This endpoint retrieves the total counts of Courses.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "CourseId",
            "in": "query",
            "type": "string",
            "description": "CourseId",
            "required": false
          },
          {
            "name": "UserId",
            "in": "query",
            "type": "string",
            "description": "UserId",
            "required": false
          },
          {
            "name": "CurrentModule",
            "in": "query",
            "type": "string",
            "description": "CurrentModuleId",
            "required": false
          },
          {
            "name": "CurrentSection",
            "in": "query",
            "type": "string",
            "description": "CurrentSectionId",
            "required": false
          },
          {
            "name": "TotalVideosWatched",
            "in": "query",
            "type": "Number",
            "description": "TotalVideosWatched",
            "required": false
          },
          {
            "name": "TotalQuizAttempted",
            "in": "query",
            "type": "Number",
            "description": "TotalQuizAttempted",
            "required": false
          },
          {
            "name": "CourseCompletionPercentage",
            "in": "query",
            "type": "Number",
            "description": "CourseCompletionPercentage",
            "required": false
          },
          {
            "name": "TotalSectionCompleted",
            "in": "query",
            "type": "Number",
            "description": "TotalSectionCompleted",
            "required": false
          },
          {
            "name": "TotalSections",
            "in": "query",
            "type": "Number",
            "description": "TotalSections",
            "required": false
          },
          {
            "name": "TotalCourseHoursSpent",
            "in": "query",
            "type": "string",
            "description": "TotalCourseHoursSpent",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserCoursesListSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserCoursesListSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/userCourse/{userCourseId}": {
      "get": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Get UserCourse",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "userCourseId",
            "in": "path",
            "type": "string",
            "description": "UserCourseId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleUserCourseSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleUserCourseSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "UserCourse"
        ],
        "summary": "update UserCourse ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userCourseId",
            "in": "path",
            "type": "string",
            "description": "userCourseId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User Course Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserCourseUpdateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCourseUpdateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete UserCourse",
        "tags": [
          "UserCourse"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userCourseId",
            "in": "path",
            "type": "string",
            "description": "userCourseId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCourse/section": {
      "post": {
        "tags": [
          "UserCourseSection"
        ],
        "summary": "Create User course-section",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Course Section Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserCourseSectionObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCourseSectionObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionCreationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCourse/section/all": {
      "get": {
        "tags": [
          "UserCourseSection"
        ],
        "summary": "Fetch UserCourse Section List",
        "description": "This endpoint retrieves the total counts of UserCourseSection.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "SectionId",
            "in": "query",
            "type": "string",
            "description": "SectionId",
            "required": false
          },
          {
            "name": "ModuleId",
            "in": "query",
            "type": "string",
            "description": "ModuleId",
            "required": false
          },
          {
            "name": "UserId",
            "in": "query",
            "type": "string",
            "description": "UserId",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionListSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionListSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/userCourse/section/{userCourseSectionId}": {
      "get": {
        "tags": [
          "UserCourseSection"
        ],
        "summary": "Get UserCourse Section",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "userCourseSectionId",
            "in": "path",
            "type": "string",
            "description": "userCourseSectionId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleUserCourseSectionSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleUserCourseSectionSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "UserCourseSection"
        ],
        "summary": "update UserCourse Section",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userCourseSectionId",
            "in": "path",
            "type": "string",
            "description": "userCourseSectionId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User Course Section Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UserCourseSectionUpdateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCourseSectionUpdateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete UserCourse Section",
        "tags": [
          "UserCourseSection"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userCourseSectionId",
            "in": "path",
            "type": "string",
            "description": "userCourseSectionId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserCourseSectionDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCourse/course/completion" : {
      "get": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Get user course completion percentage(>60)",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the User",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/ContinueWatchingSuccessResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ContinueWatchingSuccessResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/userCourse/nps/submit" : {
      "post": {
        "tags": [
          "UserCourse"
        ],
        "summary": "Create NPS",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the User",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "NPS Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/NPSCreateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/NPSCreateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/NPSSuccessObject"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCourse/continue/watching" : {
      "get": {
        "tags": [
          "Continue watching"
        ],
        "summary": "Get Continue watching data",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/ContinueWatchingSuccessResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ContinueWatchingSuccessResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/syllabus": {
      "post": {
        "tags": [
          "CourseSyllabus"
        ],
        "summary": "Create course Syllabus",
        "parameters": [],
        "requestBody": {
          "description": "Course Syllabus",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/SyllabusCreateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SyllabusCreateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "tags": [
          "CourseSyllabus"
        ],
        "summary": "Fetch Syllabus List",
        "description": "This endpoint retrieves the total counts of Courses.",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the CollegeAdmin",
            "type": "string"
          },
          {
            "name": "CourseId",
            "in": "query",
            "type": "string",
            "description": "CourseId",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SyllabusListSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SyllabusListSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/syllabus/{syllabusId}": {
      "get": {
        "tags": [
          "CourseSyllabus"
        ],
        "summary": "Get CourseSyllabus",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "syllabusId",
            "in": "path",
            "type": "string",
            "description": "SyllabusId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleSyllabusGetSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleSyllabusGetSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "CourseSyllabus"
        ],
        "summary": "Update CourseSyllabus ",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "syllabusId",
            "in": "path",
            "type": "string",
            "description": "SyllabusId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User Course Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/SyllabusCreateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/SyllabusUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete CourseSyllabus",
        "tags": [
          "CourseSyllabus"
        ],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "syllabusId",
            "in": "path",
            "type": "string",
            "description": "SyllabusId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/SyllabusDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/syllabus/getDetails/{courseId}": {
      "get": {
        "tags": [
          "CourseSyllabus"
        ],
        "summary": "Get CourseSyllabus Details",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "courseId",
            "in": "path",
            "type": "string",
            "description": "courseId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SyllabusGetDetailsSuccesss"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SyllabusGetDetailsSuccesss"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/userQuizQuestion": {
      "post": {
        "tags": ["UserQuizQuestion"],
        "summary": "Create a User Quiz Question",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserQuizQuestionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserQuizQuestion created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserQuizQuestionResponse"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "tags": ["UserQuizQuestion"],
        "summary": "Get all User Quiz Questions",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
        {
          "name": "QuizId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "QuestionId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "CourseId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "ModuleId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "SectionId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "UserId",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "UserEmail",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "QuestionType",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "IsCorrect",
          "in": "query",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "TimeSpent",
          "in": "query",
          "required": false,
          "type": "number"
        },
        {
          "name": "UserAnswer",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "question",
          "in": "query",
          "required": false,
          "type": "string"
        }
        ],
        "responses": {
          "200": {
            "description": "All user quiz questions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserQuizQuestionsListResponse"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/userQuizQuestion/{userQuizQuestionId}": {
      "get": {
        "tags": ["UserQuizQuestion"],
        "summary": "Get a User Quiz Question by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Access token of the admin"
          },
          {
            "name": "userQuizQuestionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the UserQuizQuestion"
          }
        ],
        "responses": {
          "200": {
            "description": "User quiz question data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserQuizQuestionByIdResponse"
                }
              }
            }
          },
          "404": { "description": "UserQuizQuestion not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "tags": ["UserQuizQuestion"],
        "summary": "Update a User Quiz Question by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Access token of the admin"
          },
          {
            "name": "userQuizQuestionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the UserQuizQuestion to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserQuizQuestionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserQuizQuestion updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/GenericSuccessResponse"
                }
              }
            }
          },
          "400": { "description": "Invalid update data" },
          "404": { "description": "UserQuizQuestion not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "tags": ["UserQuizQuestion"],
        "summary": "Delete a User Quiz Question by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Access token of the admin"
          },
          {
            "name": "userQuizQuestionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the UserQuizQuestion to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "UserQuizQuestion deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/GenericSuccessDeleteResponse"
                }
              }
            }
          },
          "404": { "description": "UserQuizQuestion not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/userCodingAnswer/runCode" : {
      "post": {
        "tags": [
          "UserCodingAnswer"
        ],
        "summary": "Create user coding answer mapping or run test case",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User coding answer Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCodingAnswerObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserRunTestCaseSubmissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCodingAnswer/submitCode" :{
      "post": {
        "tags": [
          "UserCodingAnswer"
        ],
        "summary": "Submit code",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User coding answer Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserCodingAnswerObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserCodeSubmitSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/userCodingAnswer" : {
      "get": {
        "tags": [
          "UserCodingAnswer"
        ],
        "summary": "Get User Coding Answer",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the user",
            "type": "string"
          },
          {
            "name": "SectionId",
            "in": "query",
            "type": "string",
            "description": "SectionId",
            "required": true
          },
          {
            "name": "ModuleId",
            "in": "query",
            "type": "string",
            "description": "ModuleId",
            "required": true
          },
          {
            "name": "CourseId",
            "in": "query",
            "type": "string",
            "description": "CourseId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserRunTestCaseSubmissionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserRunTestCaseSubmissionResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/coupons": {
      "post": {
        "tags": ["Manage Coupons"],
        "summary": "Create a new coupon",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Coupon Create Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CouponCreateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CouponCreateObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Coupon created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CouponCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Manage Coupons"],
        "summary": "Get list of coupons",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "CouponName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CouponName"
          },
          {
            "name": "CouponCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CouponCode"
          },
          {
            "name": "Discount",
            "in": "query",
            "required": false,
            "type": "object",
            "description": "1->rupees , 2-> percentage"
          },
          {
            "name": "CouponUsedCount",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "CouponUsedCount"
          },
          {
            "name": "UsageType",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "1->unlimited , 2 -> limited"
          },
          {
            "name": "UsageLimit",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "UsageLimit"
          },
          {
            "name": "CouponValidFrom",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "CouponValidFrom"
          },
          {
            "name": "CouponValidTill",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "CouponValidTill"
          },
          {
            "name": "ProductIds",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "ProductIds"
          },
          {
            "name": "ProductNames",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "ProductNames"
          },
          {
            "name": "ProductVertical",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "ProductVertical -> 1 : PrepInstaPrimeProduct, 2 : PrepInstaProducts,3 : C247Products"
          },
          {
            "name": "ProductType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductType: B2C,B2I,B2I2C,MicroCerts"
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CreatedBy"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "endDate"
          }
        ],
        "responses": {
          "200": {
            "description": "List of coupons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CouponListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/coupons/{couponId}": {
      "get": {
        "tags": ["Manage Coupons"],
        "summary": "Get coupon by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "couponId",
            "in": "path",
            "description": "couponId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleCouponResponse"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Manage Coupons"],
        "summary": "Update coupon by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "couponId",
            "in": "path",
            "description": "Coupon ID",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Coupon update data",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CouponCreateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CouponUpdatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Coupon not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Manage Coupons"],
        "summary": "Delete coupon by ID",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "couponId",
            "in": "path",
            "description": "couponId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CouponDeletedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/coupons/checkcoupon/{couponCode}/{productId}": {
      "get": {
        "tags": ["Manage Coupons"],
        "summary": "Check coupon validity for product",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the UserMs",
            "type": "string"
          },
          {
            "name": "couponCode",
            "in": "path",
            "description": "Coupon code",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon validity response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CouponCheckResponse"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/products" : {
      "post": {
        "tags": ["Manage Products"],
        "summary": "Create new Product",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Question Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/ProductCreateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/ProductCreateObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ProductCreateSuccess"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "tags": ["Manage Products"],
        "summary": "Get all Products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "vertical",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "vertical -> 1 : PrepInstaPrimeProduct, 2 : PrepInstaProducts,3 : C247Products"
          },
          {
            "name": "ProductType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductType: B2C,B2I,B2I2C,MicroCerts"
          },
          {
            "name": "ProductName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductName"
          },
          {
            "name": "ProductId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductId"
          },
          {
            "name": "ProductDesc",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductDesc"
          },
          {
            "name": "ProductImg",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductImg"
          },
          {
            "name": "ProductUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductUrl"
          },
          {
            "name": "ProductCategory",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "1 -> timeBased , 2-> oneTime"
          },
          {
            "name": "ProductStartDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "ProductStartDate"
          },
          {
            "name": "ProductEndDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "ProductEndDate"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "price"
          },
          {
            "name": "ActualPrice",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "ActualPrice"
          },
          {
            "name": "GstAmount",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "GstAmount"
          },
          {
            "name": "ProductDiscount",
            "in": "query",
            "required": false,
            "type": "object",
            "description": "1 -> rupees , 2-> percentage"
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CreatedBy"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "responses": {
          "200": {
            "description": "All products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/ProductListSuccessRes"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/products/{productId}" : {
      "get": {
        "tags": ["Manage Products"],
        "summary": "Get Product",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "type": "string",
            "description": "productId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleProductSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleProductSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Manage Products"],
        "summary": "Update Product",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "type": "string",
            "description": "productId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User Course Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/ProductCreateObject"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/ProductCreateObject"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/SingleProductUpdateSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete a Product",
        "tags": ["Manage Products"],
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "productId",
            "in": "path",
            "type": "string",
            "description": "productId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/ProductDeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/products/prepinsta/microcert/{productSlug}" : {
      "get": {
        "tags": ["Manage Products"],
        "summary": "Get Product",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the UserMs",
            "type": "string"
          },
          {
            "name": "productSlug",
            "in": "path",
            "type": "string",
            "description": "productSlug",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleProductSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleProductSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders" : {
      "post": {
        "tags": ["Manage Order"],
        "summary": "Create Order",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the UserMs",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Order Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CreateOrderObj"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateOrderObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CreateOrderSuccessRes"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "tags": ["Manage Order"],
        "summary": "Get all Orders",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "ProductName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductName"
          },
          {
            "name": "UserId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "UserId"
          },
          {
            "name": "OrderId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderId"
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentStatus"
          },
          {
            "name": "PaymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentId"
          },
          {
            "name": "PaymentMethod",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentMethod"
          },
          {
            "name": "ProductId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductId"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "email"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "phone"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "amount"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "currency"
          },
          {
            "name": "UserAgent",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "UserAgent"
          },
          {
            "name": "IpAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "IpAddress"
          },
          {
            "name": "CouponCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CouponCode"
          },
          {
            "name": "ThroughPaymentLink",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "ThroughPaymentLink"
          },
          {
            "name": "PaymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentId"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "responses": {
          "200": {
            "description": "All products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/OrderListSuccess"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/orders/{orderId}" : {
      "delete": {
        "tags": ["Manage Order"],
        "summary": "Delete Order",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "type": "string",
            "description": "orderId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/OrderDeleteSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/OrderDeleteSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/verifyPayment" : {
      "post": {
        "tags": ["Manage Order"],
        "summary": "Verify Order payment",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the UserMs",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Order Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/VerifyOrderObj"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/VerifyOrderObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/VerifyOrderObjSuccess"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/paymentLinks":{
      "post": {
        "tags": ["PaymentLink"],
        "summary": "Create paymentLink",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Order paymentLink",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CreatePaymentLinkObj"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreatePaymentLinkObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PaymentLink created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CreatePaymentLinkSuccess"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "tags": ["PaymentLink"],
        "summary": "Get all PaymentLink",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "true / false"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "email"
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentStatus"
          },
          {
            "name": "UserId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "UserId"
          },
          {
            "name": "ProductName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductName"
          },
          {
            "name": "ProductId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductId"
          },
          {
            "name": "IsUsed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "true / false"
          },
          {
            "name": "PaymentUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentUrl"
          },
          {
            "name": "PaymentLinkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentLinkId"
          },
          {
            "name": "IsCancelled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "true / false"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "Number",
            "description": "amount"
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CreatedBy"
          },
          {
            "name": "PaymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "PaymentId"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "responses": {
          "200": {
            "description": "All products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/PaymentLinkListRes"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/paymentLinks/{paymentLinkId}" : {
      "get": {
        "tags": ["PaymentLink"],
        "summary": "Get PaymentLink",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "paymentLinkId",
            "in": "path",
            "type": "string",
            "description": "paymentLinkId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SinglePaymentLinkRes"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SinglePaymentLinkRes"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["PaymentLink"],
        "summary": "Delete PaymentLink",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "paymentLinkId",
            "in": "path",
            "type": "string",
            "description": "paymentLinkId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/PaymentLinkDeleteSucc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/PaymentLinkDeleteSucc"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/paymentLinks/cancel/{paymentLinkId}" : {
      "post": {
        "tags": ["PaymentLink"],
        "summary": "Cancel paymentLink",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "paymentLinkId",
            "in": "path",
            "type": "string",
            "description": "paymentLinkId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "PaymentLink cancel successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CreatePaymentLinkSuccess"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/userSubscription" : {
      "post": {
        "tags": ["UserSubscription"],
        "summary": "Create User Subscription",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Create User Subscription",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/CreateUserSubscriptionObj"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateUserSubscriptionObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User Subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CreateUserSubscriptionSuccess"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "get": {
        "tags": ["UserSubscription"],
        "summary": "Get all UserSubscription",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "sort_val",
            "in": "query",
            "type": "string",
            "description": "sorting value",
            "example" : "createdAt"
          },
          {
            "name": "dir",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "sorting direction",
            "example" : "desc",
            "in": "query"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "email"
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Payment status of the subscription"
          },
          {
            "name": "UserId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the user"
          },
          {
            "name": "ProductName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The name of the product"
          },
          {
            "name": "ProductId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the product"
          },
          {
            "name": "IsUsed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the subscription is used (true/false)"
          },
          {
            "name": "PaymentUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Payment URL for the subscription"
          },
          {
            "name": "PaymentLinkId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the payment link"
          },
          {
            "name": "IsCancelled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Indicates if the subscription is cancelled (true/false)"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Amount of the subscription"
          },
          {
            "name": "CreatedBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The creator of the subscription"
          },
          {
            "name": "PaymentId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the payment"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "Start date of the subscription"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "End date of the subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "All products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserSubscriptionList"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/userSubscription/{userSubscriptionId}" : {
      "get": {
        "tags": ["UserSubscription"],
        "summary": "Get User Subscription",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userSubscriptionId",
            "in": "path",
            "type": "string",
            "description": "userSubscriptionId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/SingleUserSubscriptionSuccess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/SingleUserSubscriptionSuccess"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["UserSubscription"],
        "summary": "Update User Subscription",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userSubscriptionId",
            "in": "path",
            "type": "string",
            "description": "userSubscriptionId",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User Course Object",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/definitions/UpdateUserSubscriptionObj"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateUserSubscriptionObj"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/definitions/UserSubscriptionUpdatedSucc"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "tags": ["UserSubscription"],
        "summary": "Delete User Subscription",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "userSubscriptionId",
            "in": "path",
            "type": "string",
            "description": "userSubscriptionId",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/UserSubscriptionDeleteSucc"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserSubscriptionDeleteSucc"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/courses/college/courseCompletion/{collegeId}" : {
      "get": {
        "tags": [
          "College course migration"
        ],
        "summary": "Users list",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": false,
            "description": "access Token of the admin",
            "type": "string"
          },
          {
            "name": "collegeId",
            "in": "path",
            "type": "Number",
            "description": "College id",
            "required": true
          },
          {
            "name": "all",
            "in": "query",
            "type": "boolean",
            "description": "If emails array has more than 10 users then provide true",
            "example" : true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "user_email",
            "in": "query",
            "type": "string",
            "description": "search by email"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "number",
            "description": "search by phone"
          },
          {
            "name": "year_of_passing",
            "in": "query",
            "type": "number",
            "description": "search by year_of_passing"
          },
          {
            "name": "PrepId",
            "in": "query",
            "type": "number",
            "description": "search by PrepId"
          },
          {
            "name": "PrimeId",
            "in": "query",
            "type": "number",
            "description": "search by PrimeId"
          },
          {
            "name": "user_registered",
            "in": "query",
            "type": "date",
            "description": "search by user_registered"
          },
          {
            "name": "user_acquisition_source",
            "in": "query",
            "type": "string",
            "description": "search by user_acquisition_source"
          },
          {
            "name": "college_name",
            "in": "query",
            "type": "string",
            "description": "search by college_name"
          },
          {
            "name": "user_name",
            "in": "query",
            "type": "string",
            "description": "search by user_name"
          },
          {
            "name": "branch_id",
            "in": "query",
            "type": "number",
            "description": "search by branch_id"
          },
          {
            "name": "registration_number",
            "in": "query",
            "type": "string",
            "description": "search by registration_number"
          },
          {
            "name": "emails",
            "in": "query",
            "type": "array",
            "description": "List of email addresses. Can be provided as comma-separated string or array of emails",
            "required": false,
            "items": {
              "type": "string",
              "format": "email"
            },
            "collectionFormat": "multi",
            "example": "[user1@example.com, user2@example.com]"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/definitions/CollegeCourseCompletionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/CollegeCourseCompletionResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not acceptable"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Route not found."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/logs" : {
      "get": {
        "tags": ["Logs"],
        "summary": "Get logList",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "required": true,
            "description": "Access token of the admin",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "page limit"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "true / false"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductName"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductId"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ProductDesc"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "startDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "date",
            "description": "endDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Logs List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/LogListResponse"
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },
  "definitions": {
    "SingleUserObject": {
      "type": "object",
      "properties": {
        "PrepId": {
          "type": "Number",
          "example": "1",
          "required": true
        },
        "PrimeId": {
          "type": "Number",
          "example": "1",
          "required": true
        },
        "phone": {
          "type": "number",
          "example": 9876543211,
          "required": true
        },
        "user_email": {
          "type": "string",
          "example": "",
          "required": true
        },
        "year_of_passing": {
          "type": "number",
          "example": "",
          "required": true
        },
        "first_name": {
          "type": "string",
          "example": "",
          "required": true
        },
        "last_name": {
          "type": "string",
          "example": "",
          "required": true
        },
        "user_name": {
          "type": "string",
          "example": "test",
          "required": true
        },
        "user_acquisition_source": {
          "type": "string",
          "example": "PrepInsta/Prime",
          "required": false
        },
        "whatsapp_number": {
          "type": "number",
          "example": 1234567891,
          "required": false
        },
        "college_id": {
          "type": "number",
          "example": 10,
          "required": false
        },
        "college_name": {
          "type": "string",
          "example": "CollegeName",
          "required": false
        },
        "branch_id": {
          "type": "number",
          "example": 12,
          "required": false
        },
        "registration_number": {
          "type": "string",
          "example": "1234",
          "required": false
        },
        "login_date": {
          "type": "date",
          "example": "2024-10-24",
          "required": false
        },
        "user_type": {
          "type": "number",
          "example": 12,
          "required": false
        }
      }
    },
    "UpdateUserForm": {
      "type": "object",
      "properties": {
        "PrepId": {
          "type": "Number",
          "example": "",
          "required": false
        },
        "PrimeId": {
          "type": "Number",
          "example": "",
          "required": false
        },
        "phone": {
          "type": "number",
          "example": 9876543211,
          "required": false
        },
        "user_email": {
          "type": "string",
          "example": "",
          "required": false
        },
        "year_of_passing": {
          "type": "number",
          "example": "",
          "required": false
        },
        "first_name": {
          "type": "string",
          "example": "",
          "required": false
        },
        "last_name": {
          "type": "string",
          "example": "",
          "required": false
        },
        "user_name": {
          "type": "string",
          "example": "",
          "required": false
        },
        "user_acquisition_source": {
          "type": "string",
          "example": "",
          "required": false
        },
        "whatsapp_number": {
          "type": "number",
          "example": "",
          "required": false
        },
        "college_id": {
          "type": "number",
          "example": "",
          "required": false
        },
        "college_name": {
          "type": "string",
          "example": "",
          "required": false
        },
        "branch_id": {
          "type": "number",
          "example": "",
          "required": false
        },
        "registration_number": {
          "type": "string",
          "example": "",
          "required": false
        },
        "login_date": {
          "type": "date",
          "example": "",
          "required": false
        },
        "user_type": {
          "type": "number",
          "example": "",
          "required": false
        }
      }
    },
    "UploadFileObject": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "format": "binary",
          "description": "The CSV file to upload. The file should contain users information like email, passing_year etc.",
           "required" : true
        },
        "BatchSize" : {
          "type" : "Number",
          "example" : 1,
          "required" : false
        },
        "College": {
          "type": "object",
          "properties": {
            "id": {
              "type": "Number",
              "example": "1"
            },
            "name": {
              "type": "string",
              "example": "SBT"
            }
          },
        "description": "College id and name"
        },
        "PrepInstaPrimeProduct": {
          "type": "object",
          "properties": {
            "ProductId": {
              "type": "string",
              "example": "1234"
            },
            "ProductDuration": {
              "type": "object",
              "properties" : {
                 "duration" : {
                  "type" : "number",
                  "example" : 2
                 },
                 "unit" : {
                  "type" : "string",
                  "example" : "months"
                 }
              }
            },
            "ProductType" : {
              "type": "string",
              "example": "B2C"
            },
            "amount" : {
              "type" : "number",
              "required" : false,
              "example" : 200
            }
          },
        "description": "Prime access information"
        },
        "PrepInstaProduct": {
          "type": "object",
          "properties": {
            "CompleteAccess" : {
              "type": "boolean",
              "example": false
            },
            "ProductId": {
              "type": "string",
              "example": "1234"
            }
          },
        "description": "PrepInsta access information"
        },
        "RevenueType" : {
          "type" : "string",
          "required" : false,
          "example" : "new"
        },
        "Notes" : {
          "type" : "string",
          "required" : false
        }
      }
    },
    "code": {
      "type": "object",
      "properties": {
        "compilerId": {
          "type": "string",
          "example": "1"
        },
        "source": {
          "type": "object"
        },
        "input": {
          "type": "string",
          "example": "1 2"
        }
      }
    },
    "OtpSuccessObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "success"
            },
            "message": {
              "type": "string",
              "example": "called"
            },
            "check_user": {
              "type": "string",
              "example": "exist_user"
            },
            "username": {
              "type": "string",
              "example": "test"
            },
            "user_email": {
              "type": "string",
              "example": "test@gmail.com"
            },
            "api_response": {
              "type": "string",
              "example": "success | 9196XXXXXXX | 5301RRRRXXXX470553 | OTP sent.\n"
            }
          }
        }
      }
    },
    "UserProfileResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200,
          "required": true
        },
        "res": {
          "type": "object",
          "properties": {
            "User": {
              "type": "object",
              "properties": {
                "user_registered": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-05-27T10:51:33.845Z",
                  "required": true
                },
                "user_acquisition_source": {
                  "type": "string",
                  "example": "Prepinsta login form",
                  "required": true
                },
                "login_date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-05-29T08:58:38.799Z",
                  "required": true
                },
                "user_type": {
                  "type": "number",
                  "example": 3,
                  "required": true
                },
                "_id": {
                  "type": "string",
                  "example": "6835993619d8d00013302b8e",
                  "required": true
                },
                "PrepId": {
                  "type": "number",
                  "example": 1113601,
                  "required": true
                },
                "PrimeId": {
                  "type": "number",
                  "example": 728177,
                  "required": true
                },
                "first_name": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "last_name": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "user_email": {
                  "type": "string",
                  "format": "email",
                  "example": "ritu.pandey1@adda247.com",
                  "required": true
                },
                "phone": {
                  "type": "number",
                  "example": 8318018306,
                  "required": false
                },
                "year_of_passing": {
                  "type": "number",
                  "example": 2025,
                  "required": false
                },
                "user_name": {
                  "type": "string",
                  "example": "ritu.pandey1",
                  "required": true
                },
                "registration_number": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "branch_id": {
                  "type": ["number", "null"],
                  "example": null,
                  "required": false
                },
                "college_id": {
                  "type": "number",
                  "example": 10,
                  "required": false
                },
                "college_name": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "whatsapp_number": {
                  "type": ["number", "null"],
                  "example": null,
                  "required": false
                },
                "semester": {
                  "type": ["number", "null"],
                  "example": null,
                  "required": false
                },
                "image": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "importedBy": {
                  "type": "string",
                  "example": "",
                  "required": false
                },
                "primeUserName": {
                  "type": "string",
                  "example": "ritu.pandey1",
                  "required": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-05-27T10:51:34.063Z",
                  "required": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-05-29T08:58:38.800Z",
                  "required": true
                }
              }
            },
            "TotalVideosWatched": {
              "type": "number",
              "example": 119,
              "required": true
            },
            "TotalQuestionSolved": {
              "type": "number",
              "example": 31,
              "required": true
            },
            "TotalCoursesStarted": {
              "type": "number",
              "example": 6,
              "required": true
            },
            "AverageCourseCompletionPercentage": {
              "type": "number",
              "example": 45.17,
              "required": true
            },
            "Courses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TotalVideosWatched": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "TotalQuizAttempted": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "CompletedQuizzes": {
                    "type": "array",
                    "items": {},
                    "required": true
                  },
                  "CourseCompletionPercentage": {
                    "type": "number",
                    "example": 2.13,
                    "required": true
                  },
                  "TotalSectionCompleted": {
                    "type": "number",
                    "example": 1,
                    "required": true
                  },
                  "TotalSections": {
                    "type": "number",
                    "example": 47,
                    "required": true
                  },
                  "TotalCourseHoursSpent": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "IsUserCourseDetailsMigrated": {
                    "type": "boolean",
                    "example": true,
                    "required": true
                  },
                  "_id": {
                    "type": "string",
                    "example": "6837f4d2628842c7855195f9",
                    "required": true
                  },
                  "UserId": {
                    "type": "string",
                    "example": "6835993619d8d00013302b8e",
                    "required": true
                  },
                  "CourseId": {
                    "type": "string",
                    "example": "680a3cb7bb5f4c0ea736d0cf",
                    "required": true
                  },
                  "CurrentModule": {
                    "type": "string",
                    "example": "68303edf73c5198ad6129566",
                    "required": true
                  },
                  "CurrentSection": {
                    "type": "string",
                    "example": "68303edf73c5198ad6129693",
                    "required": true
                  },
                  "CourseName" : {
                    "type": "string",
                    "example": "Git"
                  }
                }
              },
              "required": true
            }
          },
          "required": true
        }
      },
      "required": true
    },
    "PartneredCollege": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the college"
        },
        "logo": {
          "type": "string",
          "description": "Logo of the college (as a link)"
        },
        "img": {
          "type": "string",
          "description": "Image of the college (as a link)"
        },
        "address": {
          "type": "string",
          "description": "Address of the college"
        },
        "phone": {
          "type": "number",
          "description": "Phone number of the college"
        },
        "email": {
          "type": "number",
          "description": "Email of the college"
        },
        "desc": {
          "type": "string",
          "description": "Description of the college"
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of branch associated with the college"
        },
        "collegeCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "college code associated with the college"
        },
        "collegeId": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "college id associated with the college"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of services associated with the college"
        },
        "activePlan": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of active plans associated with the college"
        },
        "admins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of admins associated with the college"
        }
      }
    },
    "ManageCollege": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "UpdateCollege": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the college"
        },
        "desc": {
          "type": "string",
          "description": "Description of the college"
        },
        "logo": {
          "type": "string",
          "description": "Logo of the college (as a link)"
        },
        "img": {
          "type": "string",
          "description": "Image of the college (as a link)"
        },
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of branches associated with the college"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of services associated with the college"
        },
        "activePlan": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "IDs of active plans associated with the college"
        }
      }
    },
    "UsersObject": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "PrepId": {
            "type": "integer",
            "example": 1
          },
          "PrimeId": {
            "type": "integer",
            "example": 1
          },
          "user_pass": {
            "type": "string",
            "example": "test@123"
          },
          "user_name": {
            "type": "string",
            "example": "test"
          },
          "user_email": {
            "type": "string",
            "example": "studentemail@test.com"
          },
          "user_registered": {
            "type": "string",
            "format": "date",
            "example": "2024-10-24"
          },
          "first_name": {
            "type": "string",
            "example": "test"
          },
          "last_name": {
            "type": "string",
            "example": "test"
          },
          "user_acquisition_source": {
            "type": "string",
            "example": "PrepInsta/Prime"
          },
          "phone": {
            "type": "integer",
            "example": 9876543211
          },
          "whatsapp_number": {
            "type": "integer",
            "example": 1234567891
          },
          "college_id": {
            "type": "integer",
            "example": 10
          },
          "college_name": {
            "type": "string",
            "example": "CollegeName"
          },
          "year_of_passing": {
            "type": "integer",
            "example": 2023
          },
          "branch_id": {
            "type": "integer",
            "example": 12
          },
          "registration_number": {
            "type": "string",
            "example": "1234"
          },
          "login_date": {
            "type": "string",
            "format": "date",
            "example": "2024-10-24"
          },
          "user_type": {
            "type": "integer",
            "example": 12
          }
        },
        "required": [
          "PrepId",
          "PrimeId",
          "user_name",
          "user_email",
          "user_registered",
          "first_name",
          "last_name",
          "user_acquisition_source",
          "phone",
          "year_of_passing",
          "registration_number",
          "login_date",
          "user_type"
        ]
      }
    },
    "CampusAmbassador": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "student name",
          "required": true
        },
        "email": {
          "type": "string",
          "example": "student email",
          "required": true
        },
        "phone": {
          "type": "string",
          "example": "student phone",
          "required": true
        },
        "CollegeName": {
          "type": "string",
          "example": "CollegeName",
          "required": true
        },
        "year_of_passing": {
          "type": "string",
          "example": "year_of_passing",
          "required": true
        },
        "RefId": {
          "type": "string",
          "example": "refferel Id optional"
        },
        "Start": {
          "type": "string",
          "example": "01-09-2023 23:20:48"
        },
        "End": {
          "type": "string",
          "example": "01-10-2023 23:20:48"
        }
      }
    },
    "admin": {
      "type": "object",
      "properties": {
        "adminType": {
          "type": "number",
          "description": "admintype 2 for subadmin always",
          "example": 2
        },
        "firstname": {
          "type": "string",
          "required": true,
          "example": "subadmin"
        },
        "lastname": {
          "type": "string",
          "required": true,
          "example": "subadmin"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "subadmin@yopmail.com"
        },
        "phone": {
          "type": "string",
          "example": "8827892010"
        },
        "privilege": {
          "type": "array",
          "items": {
            "type": "object",
            "iamId": {
              "type": "string"
            },
            "access": {
              "type": "number",
              "enum": [
                1,
                2,
                3
              ]
            },
            "example": {
              "iamId": "6505eca319093f14122498f6",
              "access": 3
            }
          }
        }
      }
    },
    "adminpass": {
      "type": "object",
      "properties": {
        "new_pass": {
          "type": "string",
          "required": true,
          "example": "new password"
        }
      }
    },
    "UserSuccessObject": {
      "type": "object",
      "properties": {
        "PrepId": {
          "type": "Number",
          "example": "1",
          "required": true
        },
        "PrimeId": {
          "type": "Number",
          "example": "1",
          "required": true
        },
        "user_pass": {
          "type": "string",
          "example": "test@123",
          "required": false
        },
        "user_name": {
          "type": "string",
          "example": "test",
          "required": true
        },
        "user_email": {
          "type": "string",
          "example": "studentemail@test.com",
          "required": true
        },
        "user_registered": {
          "type": "date",
          "example": "2024-10-24",
          "required": "true"
        },
        "first_name": {
          "type": "string",
          "example": "test",
          "required": true
        },
        "last_name": {
          "type": "string",
          "example": "test",
          "required": true
        },
        "user_acquisition_source": {
          "type": "string",
          "example": "PrepInsta/Prime",
          "required": true
        },
        "phone": {
          "type": "number",
          "example": 9876543211,
          "required": true
        },
        "whatsapp_number": {
          "type": "number",
          "example": 1234567891,
          "required": false
        },
        "college_id": {
          "type": "number",
          "example": 10,
          "required": false
        },
        "college_name": {
          "type": "string",
          "example": "CollegeName",
          "required": false
        },
        "year_of_passing": {
          "type": "number",
          "example": 2023,
          "required": true
        },
        "branch_id": {
          "type": "number",
          "example": 12,
          "required": false
        },
        "registration_number": {
          "type": "string",
          "example": "1234",
          "required": true
        },
        "login_date": {
          "type": "date",
          "example": "2024-10-24",
          "required": true
        },
        "user_type": {
          "type": "number",
          "example": 12,
          "required": true
        }
      }
    },
    "loginObject": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "admin@prepinsta.com"
        },
        "pass": {
          "type": "string",
          "example": "PrepAdmin@123"
        }
      }
    },
    "updateUserPassword": {
      "type": "object",
      "properties": {
        "old_pass": {
          "type": "string",
          "required": true,
          "example": "oldpassword"
        },
        "new_pass": {
          "type": "string",
          "required": true,
          "example": "newpassword"
        }
      }
    },
    "updateCollegeAdminPassword": {
      "type": "object",
      "properties": {
        "CollegeAdminId": {
          "type": "string",
          "required": true,
          "example": "oldpassword"
        },
        "new_pass": {
          "type": "string",
          "required": true,
          "example": "newpassword"
        }
      }
    },
    "moduleAdd": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "id": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "moduleAddpri": {
      "type": "object",
      "properties": {
        "privilege": {
          "type": "array",
          "items": {
            "type": "object",
            "iamId": {
              "type": "string"
            },
            "access": {
              "type": "number",
              "enum": [
                1,
                2,
                3
              ]
            },
            "example": {
              "iamId": "6505eca319093f14122498f6",
              "access": 3
            }
          }
        }
      }
    },
    "ManageTeams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "desc": {
          "type": "string",
          "required": true
        }
      }
    },
    "updateTeam": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "required": true
        }
      }
    },
    "updateActivity": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "desc": "status",
          "required": true
        },
        "hotness": {
          "type": "number",
          "desc": "1-100% in number",
          "required": true
        },
        "AssignedLeadId": {
          "type": "string",
          "desc": "status",
          "required": true
        },
        "AssignedLead": {
          "type": "string",
          "desc": "status",
          "required": false
        }
      }
    },
    "UserForm": {
      "type": "object",
      "properties": {
        "formName": {
          "type": "string",
          "example": "prenqt",
          "required": true
        },
        "name": {
          "type": "string",
          "example": "prepstudnt",
          "required": true
        },
        "email": {
          "type": "string",
          "example": "studentemail@test.com",
          "required": true
        },
        "phone": {
          "type": "number",
          "example": 9876543211,
          "required": true
        },
        "whatsapp": {
          "type": "number",
          "example": 1234567891,
          "required": true
        },
        "CollegeName": {
          "type": "string",
          "example": "CollegeName",
          "required": true
        },
        "year_of_passing": {
          "type": "number",
          "example": 2023,
          "required": true
        },
        "branch": {
          "type": "string",
          "example": "cse"
        },
        "source": {
          "type": "string",
          "example": "source slug"
        }
      }
    },
    "forgotpass": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "desc": "email",
          "required": true
        }
      }
    },
    "resetpass": {
      "type": "object",
      "properties": {
        "one_time_pass": {
          "type": "string",
          "desc": "OTP",
          "required": true
        },
        "new_pass": {
          "type": "string",
          "desc": "new password",
          "required": true
        },
        "confirm_new_pass": {
          "type": "string",
          "desc": "confirm new password",
          "required": true
        }
      }
    },
    "logoutObject": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string",
          "required": true,
          "example": "your_jwt_token_here"
        }
      }
    },
    "Branch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the branch"
        },
        "branchCode": {
          "type": "string",
          "description": "Brach Code"
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the plan"
        },
        "description": {
          "type": "string",
          "description": "Description of the plan"
        },
        "price": {
          "type": "number",
          "description": "Price of the plan"
        },
        "duration": {
          "type": "number",
          "description": "Duration of the plan in months"
        },
        "discountType": {
          "type": "number",
          "description": "Type of discount (1: Percentage, 2: Number Discount)"
        },
        "discount": {
          "type": "string",
          "description": "Discount value"
        },
        "planType": {
          "type": "number",
          "description": "Type of the plan (1: B2B, 2: B2C)"
        }
      }
    },
    "CollegeAdmin": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "required": true,
          "example": "subadmin"
        },
        "lastname": {
          "type": "string",
          "required": true,
          "example": "subadmin"
        },
        "email": {
          "type": "string",
          "required": true,
          "example": "subadmin@yopmail.com"
        },
        "phone": {
          "type": "string",
          "example": "8827892010"
        },
        "position": {
          "type": "string",
          "example": "Associate Professor"
        },
        "specialization": {
          "type": "string",
          "example": "CSE"
        },
        "faculty": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "cse"
          },
          "description": "EEE"
        }
      }
    },
    "CollegeAdminpass": {
      "type": "object",
      "properties": {
        "new_pass": {
          "type": "string",
          "required": true,
          "example": "new password"
        }
      }
    },
    "CourseSearchResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "HTTP status code"
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 157,
              "description": "Total number of courses found"
            },
            "courses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "CoursePreviewImages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/01/LearnJavaCarouselImage1.webp"
                    ],
                    "description": "Array of course preview image URLs"
                  },
                  "TotalSections": {
                    "type": "integer",
                    "example": 12,
                    "description": "Total number of sections in the course"
                  },
                  "TotalVideos": {
                    "type": "integer",
                    "example": 46,
                    "description": "Total number of videos in the course"
                  },
                  "CertificationEligibility": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether certification is available"
                  },
                  "GradientColors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of gradient colors used in UI"
                  },
                  "EnrolledUsersCount": {
                    "type": "integer",
                    "example": 50,
                    "description": "Number of users enrolled in the course"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "java",
                      "learn java"
                    ],
                    "description": "Course tags"
                  },
                  "language": {
                    "type": "string",
                    "example": "English",
                    "description": "Course language"
                  },
                  "level": {
                    "type": "string",
                    "example": "Beginner",
                    "description": "Course difficulty level"
                  },
                  "MoreSections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Course About"
                        },
                        "content": {
                          "type": "string",
                          "example": "<h2>What is the course About?</h2>"
                        }
                      }
                    },
                    "description": "Additional course sections with HTML content"
                  },
                  "status": {
                    "type": "boolean",
                    "example": true,
                    "description": "Course status"
                  },
                  "searchFrequency": {
                    "type": "integer",
                    "example": 16,
                    "description": "Search frequency count"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether course is deleted"
                  },
                  "_id": {
                    "type": "string",
                    "example": "677ccde5865b149128323035",
                    "description": "Unique course identifier"
                  },
                  "CourseName": {
                    "type": "string",
                    "example": "Learn Java",
                    "description": "Name of the course"
                  },
                  "CourseTitle": {
                    "type": "string",
                    "example": "Get this course and other 200+ courses under PrepInsta Prime",
                    "description": "Course title"
                  },
                  "CourseSubtitle": {
                    "type": "string",
                    "example": "Get a free assessment through India's leading online platform",
                    "description": "Course subtitle"
                  },
                  "CourseUrl": {
                    "type": "string",
                    "example": "https://prepinstaprime.com/course/java",
                    "description": "Course URL"
                  },
                  "CourseThumbnail": {
                    "type": "string",
                    "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2021/05/Java-Thumbn.png",
                    "description": "Course thumbnail URL"
                  },
                  "CourseRating": {
                    "type": "number",
                    "example": 5,
                    "description": "Course rating"
                  },
                  "CourseSyllabusPageUrl": {
                    "type": "string",
                    "example": "https://prepinstaprime.com/syllabus/java-syllabus",
                    "description": "Course syllabus page URL"
                  },
                  "CourseDemoVideoUrl": {
                    "type": "string",
                    "example": "#",
                    "description": "Course demo video URL"
                  },
                  "TotalDuration": {
                    "type": "string",
                    "example": "10h+",
                    "description": "Total course duration"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-07T06:47:01.836Z",
                    "description": "Course creation timestamp"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-04-04T07:11:47.001Z",
                    "description": "Course last update timestamp"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PopularCoursesResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "HTTP status code"
        },
        "res": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "CoursePreviewImages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/02/LearnPythonCarouselImage1.webp"
                ],
                "description": "Array of course preview image URLs"
              },
              "TotalSections": {
                "type": "integer",
                "example": 22,
                "description": "Total number of sections in the course"
              },
              "TotalVideos": {
                "type": "integer",
                "example": 90,
                "description": "Total number of videos in the course"
              },
              "CertificationEligibility": {
                "type": "boolean",
                "example": false,
                "description": "Whether certification is available"
              },
              "GradientColors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of gradient colors used in UI"
              },
              "EnrolledUsersCount": {
                "type": "integer",
                "example": 0,
                "description": "Number of users enrolled in the course"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Course tags"
              },
              "language": {
                "type": "string",
                "example": "English",
                "description": "Course language"
              },
              "level": {
                "type": "string",
                "example": "Beginner",
                "description": "Course difficulty level"
              },
              "MoreSections": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Course About"
                    },
                    "content": {
                      "type": "string",
                      "example": "<h2>What is the course About?</h2>"
                    }
                  }
                },
                "description": "Additional course sections with HTML content"
              },
              "status": {
                "type": "boolean",
                "example": true,
                "description": "Course status"
              },
              "searchFrequency": {
                "type": "integer",
                "example": 17,
                "description": "Search frequency count"
              },
              "isDeleted": {
                "type": "boolean",
                "example": false,
                "description": "Whether course is deleted"
              },
              "_id": {
                "type": "string",
                "example": "6773da6382ee096f081e1248",
                "description": "Unique course identifier"
              },
              "CourseName": {
                "type": "string",
                "example": "Learn Python",
                "description": "Name of the course"
              },
              "CourseTitle": {
                "type": "string",
                "example": "Get this course and other 200+ courses under PrepInsta Prime",
                "description": "Course title"
              },
              "CourseSubtitle": {
                "type": "string",
                "example": "Get a free assessment through India's leading online platform",
                "description": "Course subtitle"
              },
              "CourseUrl": {
                "type": "string",
                "example": "https://prepinstaprime.com/course/python-course",
                "description": "Course URL"
              },
              "CourseThumbnail": {
                "type": "string",
                "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/02/LearnPythonCarouselImage7.webp",
                "description": "Course thumbnail URL"
              },
              "CourseRating": {
                "type": "number",
                "example": 5,
                "description": "Course rating"
              },
              "CourseSyllabusPageUrl": {
                "type": "string",
                "example": "https://prepinstaprime.com/syllabus/python-syllabus",
                "description": "Course syllabus page URL"
              },
              "CourseDemoVideoUrl": {
                "type": "string",
                "example": "#",
                "description": "Course demo video URL"
              },
              "TotalDuration": {
                "type": "string",
                "example": "23h+",
                "description": "Total course duration"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-12-31T11:49:55.698Z",
                "description": "Course creation timestamp"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-04-04T07:18:39.020Z",
                "description": "Course last update timestamp"
              },
              "__v": {
                "type": "integer",
                "example": 0,
                "description": "Version number"
              },
              "modules": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "description": "Course modules"
              }
            }
          }
        }
      }
    },
    "UserDeletedObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "msg": {
          "type": "string",
          "example": "User deleted successfully"
        }
      }
    },
    "UserUpdatedObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "msg": {
          "type": "string",
          "example": "User updated successfully"
        }
      }
    },
    "UploadFileSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "updatedFile": {
              "type": "object",
              "properties": {
                "upload_timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-12-06T08:37:55.839Z"
                },
                "successful_insertion": {
                  "type": "number",
                  "example": 0
                },
                "total_records": {
                  "type": "number",
                  "example": 13
                },
                "errors_count": {
                  "type": "number",
                  "example": 12
                },
                "isDeleted": {
                  "type": "boolean",
                  "example": false
                },
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "_id": {
                  "type": "string",
                  "example": "6752bcc53rgvgfgdfgd944"
                },
                "import_by": {
                  "type": "string",
                  "example": "67498d1d9gggerfrfre231394"
                },
                "file_path": {
                  "type": "string",
                  "example": "https://s3.ap-south-1.amazonaws.com/jfbrbugwrubuvfbubuv/userimport/file_1733475525176_1.csv"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-12-06T08:58:45.389Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-12-06T08:58:45.989Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                },
                "validation_error_file_path": {
                  "type": "string",
                  "example": "https://s3.ap-south-1.amazonaws.com/optimujfbbrefebbfjkefw.com/userimport/validation_errors-67kgjnegneghherghwd944.csv"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "File updated successfully"
                }
              }
            }
          }
        }
      }
    },
    "QuizObject": {
      "type": "object",
      "properties": {
        "QuizName": {
          "type": "string",
          "example": "React Basics Qui1",
          "required": true
        },
        "QuizDescription": {
          "type": "string",
          "example": "A quiz designed to test your foundational knowledge of React.",
          "required": true
        },
        "QuizType": {
          "type": "string",
          "example": "mcq",
          "required": true
        },
        "TotalQuestions": {
          "type": "Number",
          "example": 10
        },
        "ClonedIn": {
          "type": "array",
          "example": [
            "676fc66f4078fc5cb2c98090"
          ]
        },
        "tags": {
          "type": "array",
          "example": [
            "react",
            "frontend1"
          ]
        }
      }
    },
    "QuizCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Quiz Created Successfully"
            }
          }
        }
      }
    },
    "QuizUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Quiz Updated Successfully"
            }
          }
        }
      }
    },
    "QuizDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Quiz Deleted Successfully"
            }
          }
        }
      }
    },
    "QuizListObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number",
              "example": 4
            },
            "quizzes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "QuizType": {
                    "type": "string",
                    "example": "mcq"
                  },
                  "ClonedIn": {
                    "type": "array",
                    "example": [
                      "676fc66f4078fc5cb2c98090"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "example": [
                      "react",
                      "frontend1"
                    ]
                  },
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "_id": {
                    "type": "string",
                    "example": "678a34c54a6e3053f215dbb0"
                  },
                  "QuizName": {
                    "type": "string",
                    "example": "React Basics Qui11"
                  },
                  "QuizDescription": {
                    "type": "string",
                    "example": "A quiz designed to test your foundational knowledge of React."
                  },
                  "TotalQuestions": {
                    "type": "number",
                    "example": 12
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-01-17T10:45:25.020Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-01-17T10:45:25.020Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "SingleQuizObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "QuizType": {
              "type": "string",
              "example": "mcq"
            },
            "ClonedIn": {
              "type": "array",
              "example": [
                "676fc66f4078fc5cb2c98090"
              ]
            },
            "tags": {
              "type": "array",
              "example": [
                "react",
                "frontend1"
              ]
            },
            "status": {
              "type": "boolean",
              "example": true
            },
            "isDeleted": {
              "type": "boolean",
              "example": false
            },
            "_id": {
              "type": "string",
              "example": "678a34c54a6e3053f215dbb0"
            },
            "QuizName": {
              "type": "string",
              "example": "React Basics Qui11"
            },
            "QuizDescription": {
              "type": "string",
              "example": "A quiz designed to test your foundational knowledge of React."
            },
            "TotalQuestions": {
              "type": "number",
              "example": 12
            },
            "createdAt": {
              "type": "string",
              "example": "2025-01-17T10:45:25.020Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2025-01-17T10:45:25.020Z"
            },
            "__v": {
              "type": "number",
              "example": 0
            }
          }
        }
      }
    },
    "QuestionInputObject": {
      "type": "object",
      "properties": {
        "QuizId": {
          "type": "string",
          "example": "678a34c54a6e3053f215dbb0",
          "description": "The ID of the quiz to which this question belongs."
        },
        "QuestionType": {
          "type": "string",
          "example": "mcq",
          "description": "The type of question (e.g., 'mcq').",
          "required": true
        },
        "DefaultMarks": {
          "type": "number",
          "example": 2,
          "description": "The default marks awarded for a correct answer."
        },
        "PenaltyMarks": {
          "type": "number",
          "example": -0.33,
          "description": "The penalty marks deducted for an incorrect answer."
        },
        "DisplayIndex": {
          "type": "number",
          "example": 1,
          "description": "The display order of the question within the quiz."
        },
        "question": {
          "type": "string",
          "example": "What is the capital of France?",
          "description": "The text of the question.",
          "required": true
        },
        "explanation": {
          "type": "string",
          "example": "Paris is the capital of France.",
          "description": "An optional explanation for the answer."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "geography"
          },
          "description": "Tags related to the question."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "input": {
                "type": "string",
                "example": "Paris",
                "description": "The text of the option."
              },
              "isAnswer": {
                "type": "boolean",
                "example": true,
                "description": "Indicates whether this option is the correct answer."
              }
            }
          },
          "description": "The list of options for the question."
        }
      }
    },
    "QuestionCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Question Created Successfully"
            }
          }
        }
      }
    },
    "QuizResponseObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 4,
              "description": "The total number of quizzes returned."
            },
            "quizzes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "QuizType": {
                    "type": "string",
                    "example": "mcq",
                    "description": "The type of the quiz (e.g., 'mcq')."
                  },
                  "ClonedIn": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "676fc66f4078fc5cb2c98090"
                    },
                    "description": "List of IDs where the quiz has been cloned."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "react"
                    },
                    "description": "Tags associated with the quiz."
                  },
                  "status": {
                    "type": "boolean",
                    "example": true,
                    "description": "The status of the quiz (true for active, false for inactive)."
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the quiz is deleted."
                  },
                  "_id": {
                    "type": "string",
                    "example": "678a34c54a6e3053f215dbb0",
                    "description": "Unique identifier for the quiz."
                  },
                  "QuizName": {
                    "type": "string",
                    "example": "React Basics Qui11",
                    "description": "The name of the quiz."
                  },
                  "QuizDescription": {
                    "type": "string",
                    "example": "A quiz designed to test your foundational knowledge of React.",
                    "description": "A brief description of the quiz."
                  },
                  "TotalQuestions": {
                    "type": "integer",
                    "example": 12,
                    "description": "The total number of questions in the quiz."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-17T10:45:25.020Z",
                    "description": "The timestamp when the quiz was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-17T10:45:25.020Z",
                    "description": "The timestamp when the quiz was last updated."
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0,
                    "description": "Version key for internal use."
                  }
                }
              }
            }
          }
        }
      }
    },
    "QuestionUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Quiz Updated Successfully"
            }
          }
        }
      }
    },
    "QuestionObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "QuestionType": {
              "type": "string",
              "example": "mcq",
              "description": "The type of question (e.g., 'mcq')."
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "science"
              },
              "description": "Tags associated with the question."
            },
            "status": {
              "type": "boolean",
              "example": true,
              "description": "The status of the question (true for active, false for inactive)."
            },
            "isDeleted": {
              "type": "boolean",
              "example": false,
              "description": "Indicates if the question is deleted."
            },
            "_id": {
              "type": "string",
              "example": "678a2a91ce9645516773055d",
              "description": "Unique identifier for the question."
            },
            "QuizId": {
              "type": "string",
              "example": "678a000738ef5f42b18b4e94",
              "description": "The ID of the quiz that this question belongs to."
            },
            "DefaultMarks": {
              "type": "integer",
              "example": 3,
              "description": "The default marks assigned to the question."
            },
            "PenaltyMarks": {
              "type": "integer",
              "example": 0,
              "description": "The penalty marks for incorrect answers."
            },
            "DisplayIndex": {
              "type": "integer",
              "example": 2,
              "description": "The display index for the question."
            },
            "question": {
              "type": "string",
              "example": "The Earth is flat.",
              "description": "The text of the question."
            },
            "explanation": {
              "type": "string",
              "example": "This is a common misconception. The Earth is an oblate spheroid.",
              "description": "Explanation of the question."
            },
            "options": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "678a2a91ce9645516773055e",
                    "description": "Unique identifier for the option."
                  },
                  "input": {
                    "type": "string",
                    "example": "True",
                    "description": "The option text."
                  },
                  "isAnswer": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if this option is the correct answer."
                  }
                }
              },
              "description": "The list of options for the question."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-17T10:01:53.490Z",
              "description": "The timestamp when the question was created."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-17T10:01:53.490Z",
              "description": "The timestamp when the question was last updated."
            },
            "__v": {
              "type": "integer",
              "example": 0,
              "description": "Version key for internal use."
            }
          }
        }
      }
    },
    "QuestionDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Question Deleted Successfully"
            }
          }
        }
      }
    },
    "CourseDetailsSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "677ccba6865b149128322fd1",
              "description": "Unique identifier for the course."
            },
            "CourseName": {
              "type": "string",
              "example": "Learn C++",
              "description": "The name of the course."
            },
            "TotalSections": {
              "type": "integer",
              "example": 10,
              "description": "Total number of sections in the course."
            },
            "TotalVideos": {
              "type": "integer",
              "example": 56,
              "description": "Total number of videos in the course."
            },
            "language": {
              "type": "string",
              "example": "English",
              "description": "The language of the course."
            },
            "level": {
              "type": "string",
              "example": "Beginner",
              "description": "The difficulty level of the course."
            },
            "CourseThumbnail": {
              "type": "string",
              "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2023/10/C.webp",
              "description": "Thumbnail image URL for the course."
            },
            "content": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "CPP Basics",
                    "description": "The name of the content section."
                  },
                  "NoOfVideos": {
                    "type": "integer",
                    "example": 5,
                    "description": "The number of videos in this section."
                  },
                  "NoOfQuiz": {
                    "type": "integer",
                    "example": 6,
                    "description": "The number of quizzes in this section."
                  },
                  "DisplayIndex": {
                    "type": "integer",
                    "example": 1,
                    "description": "The display order of this section."
                  },
                  "sections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "SectionName": {
                          "type": "string",
                          "example": "What is CPP",
                          "description": "The name of the section."
                        },
                        "SectionType": {
                          "type": "string",
                          "example": "code",
                          "description": "The type of section (e.g., code, quiz, video)."
                        },
                        "isComplete": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates whether the section is complete."
                        }
                      }
                    },
                    "description": "List of sections under this content."
                  }
                }
              },
              "description": "The content structure for the course."
            }
          }
        }
      }
    },
    "QuizDetailsSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "678f45f3b8d933aefa8b5b5e",
              "description": "Unique identifier for the quiz."
            },
            "QuizType": {
              "type": "string",
              "example": "mcq",
              "description": "The type of quiz (e.g., 'mcq')."
            },
            "QuizName": {
              "type": "string",
              "example": "nnnn1",
              "description": "The name of the quiz."
            },
            "QuizDescription": {
              "type": "string",
              "example": "fggdg",
              "description": "The description of the quiz."
            },
            "TotalQuestions": {
              "type": "integer",
              "example": 50,
              "description": "The total number of questions in the quiz."
            },
            "questions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "6790c90a1e2bba0376e6bec8",
                    "description": "Unique identifier for the question."
                  },
                  "QuestionType": {
                    "type": "string",
                    "example": "mcq",
                    "description": "The type of question (e.g., 'mcq')."
                  },
                  "DefaultMarks": {
                    "type": "integer",
                    "example": 60,
                    "description": "The default marks assigned to the question."
                  },
                  "PenaltyMarks": {
                    "type": "integer",
                    "example": -4,
                    "description": "The penalty marks for an incorrect answer."
                  },
                  "question": {
                    "type": "string",
                    "example": "gndjg",
                    "description": "The text of the question."
                  },
                  "explanation": {
                    "type": "string",
                    "example": "Testing",
                    "description": "The explanation for the question."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "input": {
                          "type": "string",
                          "example": "test2",
                          "description": "The text of the option."
                        },
                        "isAnswer": {
                          "type": "boolean",
                          "example": true,
                          "description": "Indicates if this option is the correct answer."
                        }
                      }
                    },
                    "description": "The list of options for the question."
                  },
                  "DisplayIndex": {
                    "type": "integer",
                    "example": 1,
                    "description": "The order of the question in the quiz."
                  }
                }
              },
              "description": "The list of questions in the quiz."
            }
          }
        }
      }
    },
    "UserCourseObject": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string",
          "description": "CourseId",
          "required": true
        },
        "CurrentModule": {
          "type": "string",
          "description": "CurrentModuleId",
          "required": true
        },
        "CurrentSection": {
          "type": "string",
          "description": "CurrentSectionId",
          "required": true
        },
        "TotalVideosWatched": {
          "type": "integer",
          "example": 1,
          "description": "TotalVideosWatched"
        },
        "TotalQuizAttempted": {
          "type": "integer",
          "example": 0,
          "description": "TotalQuizAttempted"
        },
        "TotalSectionCompleted": {
          "type": "integer",
          "example": 1,
          "description": "TotalSectionCompleted"
        },
        "TotalSections": {
          "type": "integer",
          "example": 8,
          "description": "TotalSections"
        },
        "TotalCourseHoursSpent": {
          "type": "string",
          "example": "6h 45m",
          "description": "TotalCourseHoursSpent"
        }
      }
    },
    "UserCourseCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course created Successfully"
            }
          }
        }
      }
    },
    "UserCourseUpdateObject": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string",
          "description": "CourseId"
        },
        "CurrentModule": {
          "type": "string",
          "description": "CurrentModuleId"
        },
        "CurrentSection": {
          "type": "string",
          "description": "CurrentSectionId"
        },
        "TotalVideosWatched": {
          "type": "integer",
          "example": 1,
          "description": "TotalVideosWatched"
        },
        "TotalQuizAttempted": {
          "type": "integer",
          "example": 0,
          "description": "TotalQuizAttempted"
        },
        "TotalSectionCompleted": {
          "type": "integer",
          "example": 1,
          "description": "TotalSectionCompleted"
        },
        "TotalSections": {
          "type": "integer",
          "example": 8,
          "description": "TotalSections"
        },
        "TotalCourseHoursSpent": {
          "type": "string",
          "example": "6h 45m",
          "description": "TotalCourseHoursSpent"
        }
      }
    },
    "UserCoursesListSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1,
              "description": "The total number of user courses."
            },
            "userCourses": {
              "type": "array",
              "description": "List of user courses and their progress details.",
              "items": {
                "type": "object",
                "properties": {
                  "TotalVideosWatched": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of videos watched by the user."
                  },
                  "TotalQuizAttempted": {
                    "type": "integer",
                    "example": 0,
                    "description": "The total number of quizzes attempted by the user."
                  },
                  "CourseCompletionPercentage": {
                    "type": "number",
                    "example": 12.5,
                    "description": "The percentage of the course completed by the user."
                  },
                  "TotalSectionCompleted": {
                    "type": "integer",
                    "example": 1,
                    "description": "The total number of sections completed by the user."
                  },
                  "TotalSections": {
                    "type": "integer",
                    "example": 8,
                    "description": "The total number of sections in the course."
                  },
                  "status": {
                    "type": "boolean",
                    "example": true,
                    "description": "The active status of the user course."
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the course is deleted."
                  },
                  "_id": {
                    "type": "string",
                    "example": "67972f579f82da82501c5754",
                    "description": "Unique identifier for the user course."
                  },
                  "CourseId": {
                    "type": "string",
                    "example": "677ccde5865b149128323035",
                    "description": "Unique identifier for the course."
                  },
                  "UserId": {
                    "type": "string",
                    "example": "6582e93b98a0d88511eb4c92",
                    "description": "Unique identifier for the user."
                  },
                  "CurrentModule": {
                    "type": "string",
                    "example": "6780e1fcebdf4fd7f1318c96",
                    "description": "The current module the user is studying."
                  },
                  "CurrentSection": {
                    "type": "string",
                    "example": "6790c008ef0d2af390d29ee4",
                    "description": "Unique identifier for the current section the user is on."
                  },
                  "TotalCourseHoursSpent": {
                    "type": "string",
                    "example": "6h 45m",
                    "description": "The total amount of time the user has spent on the course."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-27T07:01:43.299Z",
                    "description": "The timestamp when the user course record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-27T07:18:48.629Z",
                    "description": "The timestamp when the user course record was last updated."
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0,
                    "description": "Version key for internal use."
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserCourseSectionCreationSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "TotalVideosWatched": {
              "type": "integer",
              "example": 0,
              "description": "Number of videos watched by the user"
            },
            "TotalQuizAttempted": {
              "type": "integer",
              "example": 0,
              "description": "Number of quizzes attempted by the user"
            },
            "CompletedQuizzes": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Quiz section IDs completed by the user"
              },
              "example": []
            },
            "CourseCompletionPercentage": {
              "type": "number",
              "format": "float",
              "example": 0,
              "description": "Percentage of course completed"
            },
            "TotalSectionCompleted": {
              "type": "integer",
              "example": 0,
              "description": "Total number of sections completed"
            },
            "TotalSections": {
              "type": "integer",
              "example": 130,
              "description": "Total number of sections in the course"
            },
            "TotalCourseHoursSpent": {
              "type": "integer",
              "example": 0,
              "description": "Total hours spent on the course"
            },
            "IsUserCourseDetailsMigrated": {
              "type": "boolean",
              "example": true,
              "description": "Flag indicating if the course details are migrated"
            },
            "status": {
              "type": "boolean",
              "example": true,
              "description": "Status flag"
            },
            "isDeleted": {
              "type": "boolean",
              "example": false,
              "description": "Indicates if the record is deleted"
            },
            "_id": {
              "type": "string",
              "example": "682d73a973c5198adXXXXXX",
              "description": "Unique identifier for the user course"
            },
            "CourseId": {
              "type": "string",
              "example": "676fcXXXXXXfc5cb2c98090",
              "description": "Unique identifier for the course"
            },
            "UserId": {
              "type": "string",
              "example": "6827XXXXXXX04bdeb5ac5",
              "description": "Unique identifier for the user"
            },
            "__v": {
              "type": "integer",
              "example": 0,
              "description": "Version key"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-21T06:33:13.282Z",
              "description": "Creation timestamp"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-05-21T06:40:58.519Z",
              "description": "Last update timestamp"
            },
            "nps" : {
              "type" : "boolean",
              "example" : false,
              "required" : false
            }
          }
        }
      }
    },
    "SingleUserCourseSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "TotalVideosWatched": {
              "type": "integer",
              "example": 1,
              "description": "The total number of videos watched by the user."
            },
            "TotalQuizAttempted": {
              "type": "integer",
              "example": 0,
              "description": "The total number of quizzes attempted by the user."
            },
            "CourseCompletionPercentage": {
              "type": "number",
              "example": 0,
              "description": "The percentage of the course completed by the user."
            },
            "TotalSectionCompleted": {
              "type": "integer",
              "example": 1,
              "description": "The total number of sections completed by the user."
            },
            "TotalSections": {
              "type": "integer",
              "example": 8,
              "description": "The total number of sections in the course."
            },
            "status": {
              "type": "boolean",
              "example": true,
              "description": "The active status of the user course."
            },
            "isDeleted": {
              "type": "boolean",
              "example": false,
              "description": "Indicates if the course is deleted."
            },
            "_id": {
              "type": "string",
              "example": "67972f579f82da82501c5754",
              "description": "Unique identifier for the user course."
            },
            "CourseId": {
              "type": "string",
              "example": "677ccde5865b149128323035",
              "description": "Unique identifier for the course."
            },
            "UserId": {
              "type": "string",
              "example": "6582e93b98a0d88511eb4c92",
              "description": "Unique identifier for the user."
            },
            "CurrentModule": {
              "type": "string",
              "example": "6780e1fcebdf4fd7f1318c96",
              "description": "The current module the user is studying."
            },
            "CurrentSection": {
              "type": "string",
              "example": "6790c008ef0d2af390d29ee4",
              "description": "Unique identifier for the current section the user is on."
            },
            "TotalCourseHoursSpent": {
              "type": "string",
              "example": "6h 45m",
              "description": "The total amount of time the user has spent on the course."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-27T07:01:43.299Z",
              "description": "The timestamp when the user course record was created."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-27T07:18:48.629Z",
              "description": "The timestamp when the user course record was last updated."
            },
            "__v": {
              "type": "integer",
              "example": 0,
              "description": "Version key for internal use."
            }
          }
        }
      }
    },
    "UserCourseDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course deleted successfully"
            }
          }
        }
      }
    },
    "UserCourseUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course updated successfully"
            }
          }
        }
      }
    },
    "UserCourseSectionObject": {
      "type": "object",
      "properties": {
        "SectionId": {
          "type": "string",
          "description": "SectionId",
          "required": true
        },
        "ModuleId": {
          "type": "string",
          "description": "ModuleId",
          "required": true
        },
        "CourseId": {
          "type": "string",
          "description": "CourseId",
          "required": true
        },
        "SectionType": {
          "type": "string",
          "description": "SectionType",
          "example" : "quiz",
          "required": false
        },
        "TimeSpent": {
          "type": "string",
          "description": "TimeSpent",
          "example" : "2 min",
          "required": false
        }
      }
    },
    "UserCourseSectionUpdateObject": {
      "type": "object",
      "properties": {
        "SectionId": {
          "type": "string",
          "description": "SectionId"
        },
        "ModuleId": {
          "type": "string",
          "description": "ModuleId"
        },
        "UserId": {
          "type": "string",
          "description": "UserId"
        }
      }
    },
    "UserCourseSectionCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course section created successfully"
            }
          }
        }
      }
    },
    "UserCourseSectionListSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1,
              "description": "The total number of user course sections."
            },
            "userCoursesSections": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true,
                    "description": "The status of the course section."
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the section is deleted."
                  },
                  "_id": {
                    "type": "string",
                    "example": "67975428d810430769476101",
                    "description": "Unique identifier for the user course section record."
                  },
                  "SectionId": {
                    "type": "string",
                    "example": "6790f0f282ce3018b9de78de",
                    "description": "Unique identifier for the section."
                  },
                  "ModuleId": {
                    "type": "string",
                    "example": "9",
                    "description": "Unique identifier for the module."
                  },
                  "UserId": {
                    "type": "string",
                    "example": "user7890",
                    "description": "Unique identifier for the user."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-27T09:38:48.831Z",
                    "description": "The timestamp when the record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-28T05:40:01.926Z",
                    "description": "The timestamp when the record was last updated."
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0,
                    "description": "Version key for internal use."
                  }
                }
              }
            }
          }
        }
      }
    },
    "NPSCreateObject" : {
      "type" : "object",
      "properties" : {
        "rating" : {
          "type" : "string",
          "required": true,
          "example" : 8
        },
        "comment" : {
          "type" : "string",
          "example" : "Good"
        }
      }
    },
    "NPSSuccessObject" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" : "string ",
              "example" : "NPS submitted successfully"
            }
          }
        }
      }
    },
    "SingleUserCourseSectionSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "The HTTP status code of the response."
        },
        "res": {
          "type": "object",
          "properties": {
            "status": {
              "type": "boolean",
              "example": true,
              "description": "Indicates the status of the section."
            },
            "isDeleted": {
              "type": "boolean",
              "example": false,
              "description": "Indicates whether the section is deleted."
            },
            "_id": {
              "type": "string",
              "example": "67986d3aa7478326feaf3169",
              "description": "Unique identifier for the user course section record."
            },
            "SectionId": {
              "type": "string",
              "example": "6790f0f282ce3018b9de78de",
              "description": "Unique identifier for the section."
            },
            "ModuleId": {
              "type": "string",
              "example": "m8",
              "description": "Unique identifier for the module."
            },
            "UserId": {
              "type": "string",
              "example": "user7890",
              "description": "Unique identifier for the user."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-28T05:38:02.822Z",
              "description": "The timestamp when the record was created."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-28T05:40:53.845Z",
              "description": "The timestamp when the record was last updated."
            },
            "__v": {
              "type": "integer",
              "example": 0,
              "description": "Version key for internal use."
            }
          }
        }
      }
    },
    "ContinueWatchingSuccessResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200,
          "required": true
        },
        "res": {
          "type": "object",
          "required": true,
          "properties": {
            "courses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TotalVideosWatched": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "TotalQuizAttempted": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "CompletedQuizzes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [],
                    "required": true
                  },
                  "CourseCompletionPercentage": {
                    "type": "number",
                    "example": 61,
                    "required": true
                  },
                  "TotalSectionCompleted": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "TotalSections": {
                    "type": "number",
                    "example": 109,
                    "required": true
                  },
                  "TotalCourseHoursSpent": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "IsUserCourseDetailsMigrated": {
                    "type": "boolean",
                    "example": true,
                    "required": true
                  },
                  "_id": {
                    "type": "string",
                    "example": "68301da7a113f7197e2d002c",
                    "required": true
                  },
                  "UserId": {
                    "type": "string",
                    "example": "68271ad6d543d304bdeb5ac5",
                    "required": true
                  },
                  "CourseId": {
                    "type": "string",
                    "example": "6773893882ee096f081e1070",
                    "required": true
                  },
                  "courseDetails": {
                    "type": "object",
                    "required": true,
                    "properties": {
                      "CoursePreviewImages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [""],
                        "required": true
                      },
                      "TotalSections": {
                        "type": "number",
                        "example": 10,
                        "required": true
                      },
                      "TotalVideos": {
                        "type": "number",
                        "example": 97,
                        "required": true
                      },
                      "CertificationEligibility": {
                        "type": "boolean",
                        "example": false,
                        "required": true
                      },
                      "GradientColors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [],
                        "required": true
                      },
                      "EnrolledUsersCount": {
                        "type": "number",
                        "example": 0,
                        "required": true
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [""],
                        "required": true
                      },
                      "language": {
                        "type": "string",
                        "example": "English",
                        "required": true
                      },
                      "level": {
                        "type": "string",
                        "example": "Beginner",
                        "required": true
                      },
                      "MoreSections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Tab 1",
                              "required": true
                            },
                            "content": {
                              "type": "string",
                              "example": "",
                              "required": true
                            }
                          }
                        },
                        "required": true
                      },
                      "searchFrequency": {
                        "type": "number",
                        "example": 3,
                        "required": true
                      },
                      "_id": {
                        "type": "string",
                        "example": "6773893882ee096f081e1070",
                        "required": true
                      },
                      "CourseName": {
                        "type": "string",
                        "example": "Cloud Computing",
                        "required": true
                      },
                      "CourseTitle": {
                        "type": "string",
                        "example": "Get this course and other 200+ courses under PrepInsta Prime",
                        "required": true
                      },
                      "CourseSubtitle": {
                        "type": "string",
                        "example": "Get a free assessment through India's leading online platform for assessments and recruitment, included with PrepInsta Prime",
                        "required": true
                      },
                      "CourseUrl": {
                        "type": "string",
                        "example": "https://prepinstaprime.com/course/cloud-computing",
                        "required": true
                      },
                      "CourseThumbnail": {
                        "type": "string",
                        "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2024/01/CloudComputingCarouselImage7.webp",
                        "required": true
                      },
                      "CourseRating": {
                        "type": "number",
                        "example": 5,
                        "required": true
                      },
                      "CourseSyllabusPageUrl": {
                        "type": "string",
                        "example": "https://prepinstaprime.com/syllabus/cloud-syllabus",
                        "required": true
                      },
                      "CourseDemoVideoUrl": {
                        "type": "string",
                        "example": "#",
                        "required": true
                      },
                      "TotalDuration": {
                        "type": "string",
                        "example": "30h+",
                        "required": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },    
    "UserCourseSectionDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course section deleted successfully"
            }
          }
        }
      }
    },
    "UserCourseSectionUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User course section updated successfully"
            }
          }
        }
      }
    },
    "SyllabusCreateObject": {
      "type": "object",
      "properties": {
        "KeyHighlights": {
          "type": "object",
          "properties": {
            "SyllabusTitle": {
              "type": "string",
              "example": "Intro to Programming"
            },
            "SyllabusSlub": {
              "type": "string",
              "example": "An overview of the basics of programming."
            },
            "DemoVideoUrl": {
              "type": "string",
              "example": "http://example.com/demo-video"
            },
            "CourseLevel": {
              "type": "string",
              "example": "Beginner"
            },
            "CourseAbout": {
              "type": "string",
              "example": "This course covers the fundamentals of programming in various languages."
            },
            "CourseTime": {
              "type": "string",
              "example": "3 months"
            },
            "CourseProjects": {
              "type": "string",
              "example": "Building a basic calculator, Developing a web app"
            },
            "CourseQuestions": {
              "type": "string",
              "example": "Frequently asked questions will be discussed during the course."
            }
          }
        },
        "CourseSyllabus": {
          "type": "object",
          "properties": {
            "CourseId": {
              "type": "string",
              "example": "",
              "required": true
            }
          }
        },
        "Projects": {
          "type": "object",
          "properties": {
            "ProjectImages": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "https://example.com/project-image1.jpg"
              }
            },
            "ProjectNames": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Project 1: Calculator"
              }
            }
          }
        },
        "Tools": {
          "type": "object",
          "properties": {
            "ToolImages": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "https://example.com/tool-image1.jpg"
              }
            }
          }
        },
        "CourseScreenshots": {
          "type": "object",
          "properties": {
            "CourseScreenshots": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "https://example.com/screenshot1.jpg"
              }
            }
          }
        }
      }
    },
    "SyllabusCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Syllabus created successfully"
            }
          }
        }
      }
    },
    "SyllabusListSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1
            },
            "syllabuses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "_id": {
                    "type": "string",
                    "example": "67a3214883f793587b8ee51a"
                  },
                  "KeyHighlights": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "67a3214883f793587b8ee51b"
                      },
                      "SyllabusTitle": {
                        "type": "string",
                        "example": ""
                      },
                      "DemoVideoUrl": {
                        "type": "string",
                        "example": ""
                      },
                      "CourseLevel": {
                        "type": "string",
                        "example": ""
                      },
                      "CourseAbout": {
                        "type": "string",
                        "example": ""
                      },
                      "CourseTime": {
                        "type": "string",
                        "example": ""
                      },
                      "CourseProjects": {
                        "type": "string",
                        "example": ""
                      },
                      "CourseQuestions": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  },
                  "CourseSyllabus": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "67a3214883f793587b8ee51c"
                      },
                      "CourseId": {
                        "type": "string",
                        "example": "677bac9b865b149128322366"
                      }
                    }
                  },
                  "Projects": {
                    "type": "object",
                    "properties": {
                      "ProjectImages": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": ""
                        }
                      },
                      "ProjectNames": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": ""
                        }
                      },
                      "_id": {
                        "type": "string",
                        "example": "67a3214883f793587b8ee51d"
                      }
                    }
                  },
                  "Tools": {
                    "type": "object",
                    "properties": {
                      "ToolImages": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": ""
                        }
                      },
                      "_id": {
                        "type": "string",
                        "example": "67a3214883f793587b8ee51e"
                      }
                    }
                  },
                  "CourseScreenshots": {
                    "type": "object",
                    "properties": {
                      "CourseScreenshots": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "jbh"
                        }
                      },
                      "_id": {
                        "type": "string",
                        "example": "67a3214883f793587b8ee51f"
                      }
                    }
                  },
                  "CourseId": {
                    "type": "string",
                    "example": "677bbb1a865b1491283224c6"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-02-05T08:28:56.070Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-02-05T08:40:50.374Z"
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "SingleSyllabusGetSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "status": {
              "type": "boolean",
              "example": true
            },
            "isDeleted": {
              "type": "boolean",
              "example": false
            },
            "_id": {
              "type": "string",
              "example": "67a3214883f793587b8ee51a"
            },
            "KeyHighlights": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "67a3214883f793587b8ee51b"
                },
                "SyllabusTitle": {
                  "type": "string",
                  "example": ""
                },
                "DemoVideoUrl": {
                  "type": "string",
                  "example": ""
                },
                "CourseLevel": {
                  "type": "string",
                  "example": ""
                },
                "CourseAbout": {
                  "type": "string",
                  "example": ""
                },
                "CourseTime": {
                  "type": "string",
                  "example": ""
                },
                "CourseProjects": {
                  "type": "string",
                  "example": ""
                },
                "CourseQuestions": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "CourseSyllabus": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "67a3214883f793587b8ee51c"
                },
                "CourseId": {
                  "type": "string",
                  "example": "677bac9b865b149128322366"
                }
              }
            },
            "Projects": {
              "type": "object",
              "properties": {
                "ProjectImages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": ""
                  }
                },
                "ProjectNames": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": ""
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a3214883f793587b8ee51d"
                }
              }
            },
            "Tools": {
              "type": "object",
              "properties": {
                "ToolImages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": ""
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a3214883f793587b8ee51e"
                }
              }
            },
            "CourseScreenshots": {
              "type": "object",
              "properties": {
                "CourseScreenshots": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "jbh"
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a3214883f793587b8ee51f"
                }
              }
            },
            "CourseId": {
              "type": "string",
              "example": "677bbb1a865b1491283224c6"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-02-05T08:28:56.070Z"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-02-05T08:40:50.374Z"
            },
            "__v": {
              "type": "integer",
              "example": 0
            }
          }
        }
      }
    },
    "SyllabusUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Syllabus updated successfully"
            }
          }
        }
      }
    },
    "SyllabusDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Syllabus deleted successfully"
            }
          }
        }
      }
    },
    "SyllabusGetDetailsSuccesss": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "67a314575e9d494fbe677e8a"
            },
            "KeyHighlights": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "67a314575e9d494fbe677e8b"
                },
                "SyllabusTitle": {
                  "type": "string",
                  "example": "First Syllabus"
                },
                "DemoVideoUrl": {
                  "type": "string",
                  "example": "https://google.com/1"
                },
                "CourseLevel": {
                  "type": "string",
                  "example": "Advanced"
                },
                "CourseAbout": {
                  "type": "string",
                  "example": "Prevents errors from accessing undefined or null values. ✅ Deletes Projects, Tools, or CourseScreenshots only if they are completely empty. ✅ Handles edge cases (like if ProjectImages exists but is an empty array). ✅ Doesn't delete _id if other valid properties exist in the object."
                },
                "CourseTime": {
                  "type": "string",
                  "example": "30+"
                },
                "CourseProjects": {
                  "type": "string",
                  "example": "55+"
                },
                "CourseQuestions": {
                  "type": "string",
                  "example": "44+"
                },
                "SyllabusSlub": {
                  "type": "string",
                  "example": "First_Syllabus"
                }
              }
            },
            "Projects": {
              "type": "object",
              "properties": {
                "ProjectImages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "http://localhost:4000"
                  }
                },
                "ProjectNames": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "P1"
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a314575e9d494fbe677e8d"
                }
              }
            },
            "Tools": {
              "type": "object",
              "properties": {
                "ToolImages": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "toolImage1"
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a314575e9d494fbe677e8e"
                }
              }
            },
            "CourseScreenshots": {
              "type": "object",
              "properties": {
                "CourseScreenshots": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "ScreenShot11"
                  }
                },
                "_id": {
                  "type": "string",
                  "example": "67a314575e9d494fbe677e8f"
                }
              }
            },
            "CourseId": {
              "type": "string",
              "example": "677ccde5865b149128323035"
            },
            "CourseSyllabus": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "677ccde5865b149128323035"
                },
                "CourseName": {
                  "type": "string",
                  "example": "Learn Java"
                },
                "modules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "6780e1fcebdf4fd7f1318c96"
                      },
                      "name": {
                        "type": "string",
                        "example": "Introduction to Node.js"
                      },
                      "sections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "6790bfc0ef0d2af390d29ecb"
                            },
                            "SectionName": {
                              "type": "string",
                              "example": "What is Node.js"
                            },
                            "SectionAbout": {
                              "type": "string",
                              "example": "What is Node.js"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CategoryCourse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6775265e82ee096f081e1622"
        },
        "courseId": {
          "type": "string",
          "example": "677289a382ee096f081e0ff3"
        },
        "courseName": {
          "type": "string",
          "example": "AWS Cloud"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "gradientColors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "#BD3A5B",
            "#CB40D9",
            "#FCA2FC"
          ]
        },
        "_id": {
          "type": "string",
          "example": "676eede94078fc5cb2c98013"
        },
        "title": {
          "type": "string",
          "example": "Popular skills"
        },
        "desc": {
          "type": "string",
          "example": "Popular skills"
        },
        "displayIndex": {
          "type": "integer",
          "example": 1
        },
        "uiType": {
          "type": "integer",
          "example": 1
        },
        "sectionCourses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryCourse"
          }
        },
        "icon": {
          "type": "string",
          "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2025/04/Vector-1.png"
        }
      }
    },
    "CategoryCoursesResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        }
      }
    },
    "PrimeHomeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "BannerTitle": {
              "type": "string",
              "example": "TRENDING\\nCOURSES"
            },
            "BannerSubtitle": {
              "type": "string",
              "example": "Access courses which are trending\\nin the market"
            },
            "BannerImg": {
              "type": "string",
              "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2025/01/banner.webp"
            },
            "TrendingCourses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryDetails"
              }
            }
          }
        }
      }
    },
    "Course": {
      "type": "object",
      "properties": {
        "courseId": {
          "type": "string",
          "example": "676fe4324078fc5cb2c980ff"
        },
        "CourseName": {
          "type": "string",
          "example": "Quantitative Aptitude"
        },
        "CourseTitle": {
          "type": "string",
          "example": "Get this course and other 200+ courses offered under PrepInsta Prime"
        },
        "CourseSubtitle": {
          "type": "string",
          "example": "Get a free assessment through India's leading online platform for assessments and recruitment, included with PrepInsta Prime"
        },
        "CourseUrl": {
          "type": "string",
          "example": "https://prepinstaprime.com/course/quantitative-aptitude"
        },
        "CourseThumbnail": {
          "type": "string",
          "example": "https://files.prepinstaprime.com/admin/wp-content/uploads/2021/07/Quantitative-Aptitude-HomePage-Icon.webp"
        },
        "CourseRating": {
          "type": "number",
          "example": 5
        },
        "CourseSyllabusPageUrl": {
          "type": "string",
          "example": "https://prepinstaprime.com/syllabus/aptitude-syllabus"
        },
        "CourseDemoVideoUrl": {
          "type": "string",
          "example": ""
        },
        "TotalDuration": {
          "type": "string",
          "example": "40h+"
        },
        "TotalSections": {
          "type": "integer",
          "example": 12
        },
        "TotalVideos": {
          "type": "integer",
          "example": 100
        },
        "CertificationEligibility": {
          "type": "boolean",
          "example": false
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Language": {
          "type": "string",
          "example": "English"
        },
        "Level": {
          "type": "string",
          "example": "Beginner"
        },
        "GradientColors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CourseGradientImage": {
          "type": "string",
          "example": ""
        },
        "EnrolledUsersCount": {
          "type": "integer",
          "example": 0
        }
      }
    },
    "CategoryDetails": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Popular skills"
        },
        "desc": {
          "type": "string",
          "example": "Popular skills"
        },
        "displayIndex": {
          "type": "integer",
          "example": 1
        },
        "uiType": {
          "type": "integer",
          "example": 1
        },
        "sectionCourses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Course"
          }
        }
      }
    },
    "UserCodingAnswerObject": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string",
          "example": "664d2c4c5e3f8a001f9e1111",
          "required": true
        },
        "ModuleId": {
          "type": "string",
          "example": "664d2c5a5e3f8a001f9e2222",
          "required": true
        },
        "SectionId": {
          "type": "string",
          "example": "664d2c645e3f8a001f9e3333",
          "required": true
        },
        "SourceCode": {
          "type": "string",
          "example": "a, b = map(int, input().split())\nprint(a + b)",
          "required": true
        },
        "TestCase": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "input": {
                "type": "string",
                "example": "3 5",
                "required": true
              },
              "output": {
                "type": "string",
                "example": "8",
                "required": true
              },
              "isVisible": {
                "type": "boolean",
                "example": false,
                "required": false
              }
            }
          },
          "required": true
        },
        "TestCaseMarks": {
          "type": "number",
          "example": 5,
          "required": true
        },
        "CompilerId": {
          "type": "number",
          "example": 71,
          "required": true
        },
        "question": {
          "type": "string",
          "example": "Write a C++ program to add two numbers.",
          "required": true
        }
      }
    },
    "UserRunTestCaseSubmissionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200,
          "required": true
        },
        "res": {
          "type": "object",
          "properties": {
            "CodeSubmitted": {
              "type": "boolean",
              "example": false,
              "required": true
            },
            "_id": {
              "type": "string",
              "example": "682edeXXXXXXXXad6f305c4",
              "required": true
            },
            "CourseId": {
              "type": "string",
              "example": "66XXXXXXXX3f8a001f9e1111",
              "required": true
            },
            "ModuleId": {
              "type": "string",
              "example": "664d2c5a5e3f8a0XXXXXXX",
              "required": true
            },
            "SectionId": {
              "type": "string",
              "example": "664d2c645XXXXXXXXX",
              "required": true
            },
            "UserId": {
              "type": "string",
              "example": "682XXXXXXXXXbdeb5ac5",
              "required": true
            },
            "CompilerId": {
              "type": "number",
              "example": 71,
              "required": true
            },
            "MarksScored": {
              "type": "number",
              "example": 20,
              "required": false
            },
            "SourceCode": {
              "type": "string",
              "example": "a, b = map(int, input().split())\nprint(a + b)",
              "required": true
            },
            "UserEmail": {
              "type": "string",
              "example": "arXXXXXXXX.com",
              "required": true
            },
            "UserTestCases": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number",
                    "example": 0,
                    "required": true
                  },
                  "input": {
                    "type": "string",
                    "example": "3 5",
                    "required": true
                  },
                  "output": {
                    "type": "string",
                    "example": "8",
                    "required": true
                  },
                  "submissionToken": {
                    "type": "string",
                    "example": "9326772c-eda3-45b9-b7e2-afe04e724997",
                    "required": false
                  },
                  "stderr": {
                    "type": "string",
                    "example": "",
                    "required": false
                  },
                  "compile_output": {
                    "type": "string",
                    "example": "",
                    "required": false
                  },
                  "message": {
                    "type": "string",
                    "example": "",
                    "required": false
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "number",
                        "example": 3,
                        "required": true
                      },
                      "name": {
                        "type": "string",
                        "example": "Accepted",
                        "required": true
                      }
                    }
                  },
                  "time": {
                    "type": "number",
                    "example": 0.027,
                    "required": false
                  },
                  "memory": {
                    "type": "number",
                    "example": 3220,
                    "required": false
                  }
                }
              },
              "required": true
            },
            "question": {
              "type": "string",
              "example": "Write a python program to add two numbers.",
              "required": true
            },
            "ComplilationCount": {
              "type": "number",
              "example": 4,
              "required": false
            }
          }
        }
      }
    },
    "UserCodeSubmitSuccessResponse" : {
       "type" : "object",
       "properties" : {
         "status" : {
          "type" : "Number",
          "example" : 200
         },
         "res" : {
          "type" : "object",
           "properties" : {
            "msg" : {
              "type" : "string",
              "example" : "Code submitted successfully"
            }
           }
         }
       }
    },
    "UserQuizQuestion": {
      "type": "object",
      "properties": {
            "QuestionId": { "type": "string", "example": "67a9f97384f2c37c80fbccd9" },
            "QuizId": { "type": "string", "example": "67a9f7f9ecdf05511b3403e6" },
            "CourseId": { "type": "string", "example": "676d37f528b3e100e15d3325" },
            "ModuleId": { "type": "string", "example": "6811eb01cbd6c7af8682a437" },
            "SectionId": { "type": "string", "example": "6790c008ef0d2af390d29ee0" },
            "UserId": { "type": "string", "example": "681cab65d36584bba3fc3137" },
            "UserEmail": { "type": "string", "example": "arshad12etrf555@gmail.com" },
            "QuestionType": { "type": "string", "example": "multiple-choice" },
            "UserAnswer": { "type": "string", "example": "AaaA" },
            "TimeSpent": { "type": "string", "example": "3min" },
            "IsCorrect": { "type": "boolean", "example": true },
            "status": { "type": "boolean", "example": true },
            "isDeleted": { "type": "boolean", "example": false },
            "question": { "type": "string", "example": "What is the capital of France?" }
          },
          "required": [
            "QuestionId",
            "QuizId",
            "CourseId",
            "ModuleId",
            "SectionId",
            "UserId",
            "UserEmail",
            "QuestionType",
            "UserAnswer",
            "TimeSpent"
          ]
    },
    "UserQuizQuestionCreate": {
      "type": "object",
      "required": [
        "QuizId",
        "QuestionId",
        "CourseId",
        "ModuleId",
        "SectionId",
        "QuestionType",
        "CorrectAnswer",
        "UserAnswer",
        "question",
        "TimeSpent"
      ],
      "properties": {
        "QuizId": { "type": "string", "example": "67a9f7f9ecdf05511b3403e6" },
        "QuestionId": { "type": "string", "example": "67a9f97384f2c37c80fbccd9" },
        "CourseId": { "type": "string", "example": "676d37f528b3e100e15d3325" },
        "ModuleId": { "type": "string", "example": "6811eb01cbd6c7af8682a437" },
        "SectionId": { "type": "string", "example": "6790c008ef0d2af390d29ee0" },
        "QuestionType": { "type": "string", "example": "multiple-choice" },
        "CorrectAnswer": { "type": "string", "example": "A" },
        "UserAnswer": { "type": "string", "example": "AaaA" },
        "question": { "type": "string", "example": "What is the capital of France?" },
        "TimeSpent": { "type": "string", "example": "3min" }
      }
    },
    
    "UserQuizQuestionUpdate": {
      "type": "object",
      "required": [
        "QuizId",
        "QuestionId",
        "CourseId",
        "ModuleId",
        "SectionId",
        "UserId",
        "UserEmail",
        "QuestionType",
        "CorrectAnswer",
        "UserAnswer",
        "question",
        "TimeSpent"
      ],
      "properties": {
        "QuizId": { "type": "string", "example": "67a9f7f9ecdf05511b3403e7" },
        "QuestionId": { "type": "string", "example": "67a9f97384f2c37c80fbccd9" },
        "CourseId": { "type": "string", "example": "676d37f528b3e100e15d3325" },
        "ModuleId": { "type": "string", "example": "6811eb01cbd6c7af8682a437" },
        "SectionId": { "type": "string", "example": "6790c008ef0d2af390d29ee0" },
        "UserId": { "type": "string", "example": "681cab65d36584bba3fc3137" },
        "UserEmail": { "type": "string", "example": "arshad12etrf555@gmail.com" },
        "QuestionType": { "type": "string", "example": "MCQ" },
        "CorrectAnswer": { "type": "string", "example": "A" },
        "UserAnswer": { "type": "string", "example": "A" },
        "question": { "type": "string", "example": "What is the capital of France?" },
        "TimeSpent": { "type": "string", "example": "13min" }
      }
    },
    "UserQuizQuestionResponseJson": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "68231b9716e5d890095f5be7" },
        "QuestionId": { "type": "string", "example": "67a9f97384f2c37c80fbccd9" },
        "QuizId": { "type": "string", "example": "67a9f7f9ecdf05511b3403e6" },
        "CourseId": { "type": "string", "example": "676d37f528b3e100e15d3325" },
        "ModuleId": { "type": "string", "example": "6811eb01cbd6c7af8682a437" },
        "SectionId": { "type": "string", "example": "6790c008ef0d2af390d29ee0" },
        "UserId": { "type": "string", "example": "681cab65d36584bba3fc3137" },
        "UserEmail": { "type": "string", "example": "arshad12etrf555@gmail.com" },
        "QuestionType": { "type": "string", "example": "multiple-choice" },
        "CorrectAnswer": { "type": "string", "example": "aaaa" },
        "UserAnswer": { "type": "string", "example": "AaaA" },
        "TimeSpent": { "type": "string", "example": "3min" },
        "IsCorrect": { "type": "boolean", "example": true },
        "status": { "type": "boolean", "example": true },
        "isDeleted": { "type": "boolean", "example": false },
        "question": { "type": "string", "example": "What is the capital of Franch?" },
        "createdAt": { "type": "string", "format": "date-time", "example": "2025-05-13T10:14:47.785Z" },
        "updatedAt": { "type": "string", "format": "date-time", "example": "2025-05-13T10:22:46.513Z" },
        "__v": { "type": "integer", "example": 0 }
      }
    },
    "UserQuizQuestionResponse": {
      "type": "object",
      "properties": {
        "status": { "type": "integer", "example": 200 },
        "res": {
          "type": "object",
          "properties": {
            "msg": { "type": "string", "example": "UserQuizQuestion created successfully" }
          }
        }
      }
    },
    "UserQuizQuestionsListResponse": {
      "type": "object",
      "properties": {
        "status": { "type": "integer", "example": 200 },
        "res": {
          "type": "object",
          "properties": {
            "total": { "type": "integer", "example": 2 },
            "userQuizQuestions": {
              "type": "array",
              "items": { "$ref": "#/definitions/UserQuizQuestionResponseJson" }
            }
          }
        }
      }
    },
    "UserQuizQuestionByIdResponse": {
      "type": "object",
      "properties": {
        "status": { "type": "integer", "example": 200 },
        "res": { "$ref": "#/definitions/UserQuizQuestionResponseJson" }
      }
    },
    "GenericSuccessResponse": {
      "type": "object",
      "properties": {
        "status": { "type": "integer", "example": 200 },
        "res": {
          "type": "object",
          "properties": {
            "msg": { "type": "string", "example": "UserQuizQuestion updated successfully" }
          }
        }
      }
    },
    "GenericSuccessDeleteResponse": {
      "type": "object",
      "properties": {
        "status": { "type": "integer", "example": 200 },
        "res": {
          "type": "object",
          "properties": {
            "msg": { "type": "string", "example": "UserQuizQuestion deleted successfully" }
          }
        }
      }
    },
    "CouponCreateObject": {
      "type": "object",
      "properties": {
        "CouponName": {
          "type": "string",
          "required": true,
          "example": "New Year Discount",
          "description": "The name of the coupon."
        },
        "CouponCode": {
          "type": "string",
          "required": true,
          "example": "NY2025",
          "description": "The unique coupon code for applying the discount."
        },
        "ProductVertical": {
          "type": "Number",
          "required": false,
          "example": 1,
          "description": "//1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247"
        },
        "ProductType": {
          "type": "string",
          "required": true,
          "example": "B2C",
          "description": "B2C,B2I,B2I2C etc"
        },
        "CreatedFor": {
          "type": "string",
          "required": false,
          "example": "abc@gmail.com",
          "description": "CreatedFor"
        },
        "Discount": {
          "type": "object",
          "properties": {
            "type": {
              "type": "Number",
              "required": true,
              "example": "1",
              "description": "1->rupees , 2-> percentage"
            },
            "value": {
              "type": "number",
              "required": true,
              "example": 20,
              "description": "The value of the discount. If type is percentage, it's a percentage; if amount, it's a monetary value."
            }
          },
          "description": "for type : 1->rupees , 2-> percentage"
        },
        "ProductIds": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "68591d84e83dab79592b3386"
          },
          "description": "Array of ProductId on which the coupon is applicable to."
        },
        "ProductNames": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Testing new product"
          },
          "description": "Array of product names the coupon is applicable to."
        },
        "UsageType": {
          "type": "string",
          "enum": [1, 2],
          "required": true,
          "example": "limited",
          "description": "1->unlimited , 2 -> limited"
        },
        "UsageLimit": {
          "type": "number",
          "example": 100,
          "description": "The usage limit for the coupon, applicable if UsageType is 'limited'."
        },
        "CouponValidFrom": {
          "type": "string",
          "format": "date-time",
          "required" : true,
          "example": "2025-01-01T00:00:00.000Z",
          "description": "This is required if UsageType is unlimited else "
        },
        "CouponValidTill": {
          "type": "string",
          "format": "date-time",
          "required" : true,
          "example": "2025-12-31T23:59:59.999Z",
          "description": "This is required if UsageType is unlimited"
        }
      }      
    },
    "CouponCreatedResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Coupon saved successfully"
            }
          }
        }
      }
    },
    "CouponUpdate": {
      "type": "object",
      "properties": {
        "counsellerName": {
          "type": "string",
          "example": "John Doe"
        },
        "couponName": {
          "type": "string",
          "example": "SUMMER_SALE"
        },
        "discountRupees": {
          "type": "number",
          "example": 100
        },
        "discountPercentage": {
          "type": "number",
          "example": 20
        },
        "discountType": {
          "type": "number",
          "example": 1
        },
        "couponCode": {
          "type": "string",
          "example": "SUMMER2025"
        },
        "couponValidFrom": {
          "type": "string",
          "format": "date-time",
          "example": "2025-06-01T00:00:00.000Z"
        },
        "couponValidTill": {
          "type": "string",
          "format": "date-time",
          "example": "2025-06-30T23:59:59.999Z"
        },
        "usageType": {
          "type": "number",
          "example": 1
        },
        "usageLimit": {
          "type": "number",
          "example": 100
        },
        "productId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "prod123",
            "prod456"
          ]
        },
        "productName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Product 123",
            "Product 456"
          ]
        },
        "numberOfTimesCouponUsed": {
          "type": "number",
          "example": 0
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "isDeleted": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "SingleCouponResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "Discount": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "Number",
                  "enum": [1, 2],
                  "description": "1->rupees , 2-> percentage",
                  "example":1
                },
                "value": {
                  "type": "number",
                  "example": 20
                }
              }
            },
            "ProductIds": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "60d5f8f5c3d92a0035bf1e2c"
              },
              "description": "Array of product ObjectIds the coupon is applicable to."
            },
            "ProductVertical" : {
              "type": "Number",
              "description" : "1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247",
              "example": 1
            },
            "ProductType": {
              "type": "string",
              "enum": ["prime", "B2C", "B2I", "B2I2C", "C247"],
              "example": "prime"
            },
            "CouponUsedCount": {
              "type": "number",
              "example": 0,
              "description": "The number of times the coupon has been used."
            },
            "status": {
              "type": "boolean",
              "example": true,
              "description": "Indicates whether the coupon is active."
            },
            "isDeleted": {
              "type": "boolean",
              "example": false,
              "description": "Indicates whether the coupon is deleted."
            },
            "_id": {
              "type": "string",
              "example": "6846d8ccf1bbc06142a83747",
              "description": "The unique identifier of the coupon."
            },
            "CouponName": {
              "type": "string",
              "example": "SpringSale2025",
              "description": "The name of the coupon."
            },
            "CouponCode": {
              "type": "string",
              "example": "SPRING20",
              "description": "The unique code for applying the coupon."
            },
            "UsageType": {
              "type": "Number",
              "enum": [1, 2],
              "example": "1",
              "description": "1->unlimited , 2 -> limited"
            },
            "CouponValidFrom": {
              "type": "string",
              "format": "date-time",
              "example": "2025-03-01T00:00:00.000Z",
              "description": "The start date of the coupon's validity."
            },
            "CouponValidTill": {
              "type": "string",
              "format": "date-time",
              "example": "2025-03-31T23:59:59.000Z",
              "description": "The expiration date of the coupon."
            },
            "CreatedBy": {
              "type": "string",
              "example": "6777cab9a1f26a67c7038f98",
              "description": "The ID of the user who created the coupon."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-06-09T12:51:24.924Z",
              "description": "The timestamp when the coupon was created."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-06-09T12:51:24.924Z",
              "description": "The timestamp when the coupon was last updated."
            },
            "__v": {
              "type": "integer",
              "example": 0,
              "description": "The version key used by MongoDB."
            }
          }
        }
      }
    },
    "CouponListResponse" : {
      "type" :"object",
      "properties" : {
       "status": {
         "type": "integer",
         "example": 200
       },
       "res": {
         "type": "object",
         "properties": {
           "total": {
             "type": "integer",
             "example": 1
           },
           "coupons": {
             "type": "array",
             "items": {
               "type": "object",
               "properties": {
                "Discount": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "Number",
                      "enum": [1, 2],
                      "description" : "1->rupees , 2-> percentage",
                      "example": "1"
                    },
                    "value": {
                      "type": "number",
                      "example": 20
                    }
                  }
                },
                "ProductIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "60d5f8f5c3d92a0035bf1e2c"
                  },
                  "description": "Array of product ObjectIds the coupon is applicable to."
                },
                "ProductNames": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "This is test"
                  },
                  "description": "Array of product names the coupon is applicable to."
                },
                "ProductVertical" : {
                  "type": "Number",
                  "description" : "1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247",
                  "example": 1
                },
                "ProductType": {
                  "type": "string",
                  "enum": ["prime", "B2C", "B2I", "B2I2C", "C247"],
                  "example": "prime"
                },
                "CouponUsedCount": {
                  "type": "number",
                  "example": 0,
                  "description": "The number of times the coupon has been used."
                },
                "status": {
                  "type": "boolean",
                  "example": true,
                  "description": "Indicates whether the coupon is active."
                },
                "isDeleted": {
                  "type": "boolean",
                  "example": false,
                  "description": "Indicates whether the coupon is deleted."
                },
                "_id": {
                  "type": "string",
                  "example": "6846d8ccf1bbc06142a83747",
                  "description": "The unique identifier of the coupon."
                },
                "CouponName": {
                  "type": "string",
                  "example": "SpringSale2025",
                  "description": "The name of the coupon."
                },
                "CouponCode": {
                  "type": "string",
                  "example": "SPRING20",
                  "description": "The unique code for applying the coupon."
                },
                "UsageType": {
                  "type": "Number",
                  "enum": [1, 2],
                  "example": 1,
                  "description": "1->unlimited , 2 -> limited"
                },
                "CouponValidFrom": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-03-01T00:00:00.000Z",
                  "description": "The start date of the coupon's validity."
                },
                "CouponValidTill": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-03-31T23:59:59.000Z",
                  "description": "The expiration date of the coupon."
                },
                "CreatedBy": {
                  "type": "string",
                  "example": "6777cab9a1f26a67c7038f98",
                  "description": "The ID of the user who created the coupon."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-06-09T12:51:24.924Z",
                  "description": "The timestamp when the coupon was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-06-09T12:51:24.924Z",
                  "description": "The timestamp when the coupon was last updated."
                },
                "__v": {
                  "type": "integer",
                  "example": 0,
                  "description": "The version key used by MongoDB."
                }
              }
             }
           }
         }
       }
     }      
   },
    "CouponSingleResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "$ref": "#/definitions/SingleCouponResponse"
        }
      }
    },
    "CouponUpdatedResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Coupon updated successfully"
            }
          }
        }
      }
    },
    "CouponDeletedResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Product deleted successfully"
            }
          }
        }
      }
    },
    "CouponCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "initialAmount": {
              "type": "Number",
              "example": "1000"
            },
            "discountedAmount": {
              "type": "Number",
              "example": "799"
            }
          }
        }
      }
    },
    "ProductCreateObject" : {
      "type": "object",
      "properties": {
        "ProductName": {
          "type": "string",
          "required": true,
          "index": true,
          "example": "Sample Product"
        },
        "ProductDesc": {
          "type": "string",
          "example": "This is a sample product description."
        },
        "ProductImg": {
          "type": "string",
          "example": "https://example.com/sample-image.jpg"
        },
        "ProductUrl": {
          "type": "string",
          "example": "https://example.com/sample-product"
        },
        "vertical": {
          "type": "Number",
          "enum": [1,2,3],
          "required": true,
          "description" : "1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247",
          "example": 1
        },
        "ProductType": {
          "type": "string",
          "required": true,
          "example": "B2C"
        },
        "ProductCategory": {
          "type": "Number",
          "enum": [1, 2],
          "description": "1 -> timeBased , 2-> oneTime",
          "required": true,
          "example": 1
        },
        "ProductValidity": {
          "type" : "object",
          "properties" : {
            "duration": {
              "type": "number",
              "example": 2
            },
            "unit": {
              "type": "string",
              "description": "days or months",
              "example": "months"
            }
          },
          "description" : "unit : days or months"
        },
        "PricePerMonth":{
          "type": "string",
          "description": "Price per month when selected unit is month",
          "example": "299"
        },
        "PricePerDay":{
          "type": "string",
          "description": "Price per day when selected unit is day",
          "example": "299"
        },
        "price": {
          "type": "number",
          "required": true,
          "example": 100
        },
        "GstAmount": {
          "type": "number",
          "default": 0,
          "example": 18.00
        },
        "ProductDiscount": {
          "type" : "object",
          "properties" : {
            "type": {
              "type": "Number",
              "enum": [1, 2],
              "description": "1 -> rupees , 2-> percentage",
              "example": 1
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "description": "for type : 1 -> rupees , 2-> percentage"
        }
      }
    },
    "ProductCreateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Product saved successfully"
            }
          }
        }
      }
    },
    "ProductListSuccessRes" : {
       "type" :"object",
       "properties" : {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1
            },
            "products": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ProductDiscount": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "Number",
                        "description": "1 -> rupees , 2-> percentage",
                        "example" : 1
                      },
                      "value": {
                        "type": "number",
                        "example": 60
                      }
                    }
                  },
                  "ProductValidity": {
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "Number",
                        "example" : 20
                      },
                      "unit": {
                        "type": "string",
                        "description": "days or months",
                        "example": "months"
                      }
                    }
                  },
                  "GstAmount": {
                    "type": "number",
                    "example": 100
                  },
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "_id": {
                    "type": "string",
                    "example": "6846af64069ab4421ebc73ab"
                  },
                  "ProductName": {
                    "type": "string",
                    "example": "Sample Product 1"
                  },
                  "ProductDesc": {
                    "type": "string",
                    "example": "This is a sample description for the product."
                  },
                  "ProductImg": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                  },
                  "ProductUrl": {
                    "type": "string",
                    "example": "https://example.com/product-url"
                  },
                  "ProductType": {
                    "type": "string",
                    "enum": ["prime", "B2C", "B2I", "B2I2C", "C247"],
                    "example": "prime"
                  },
                  "ProductCategory": {
                    "type": "Number",
                    "enum": [1, 2],
                    "description": "1 -> timeBased , 2-> oneTime",
                    "example": 1
                  },
                  "price": {
                    "type": "number",
                    "example": 500
                  },
                  "ProductId": {
                    "type": "string",
                    "example": "755ae485-769a-4392-93c4-e33fe5fc5129"
                  },
                  "CreatedBy": {
                    "type": "string",
                    "example": "6777cab9a1f26a67c7038f98"
                  },
                  "vertical" : {
                    "type": "Number",
                    "description" : "1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247",
                    "example": 1
                  },
                  "NeverExpiry" : {
                    "type": "boolean",
                    "example": false
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-06-09T09:54:44.046Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-06-09T10:15:51.331Z"
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }      
    },
    "SingleProductSuccess" : {
      "type" : "object",
      "properties" : {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "GstAmount": {
              "type": "number",
              "example": 18
            },
            "status": {
              "type": "boolean",
              "example": true
            },
            "isDeleted": {
              "type": "boolean",
              "example": false
            },
            "_id": {
              "type": "string",
              "example": "6847d785e5963f8c3a396041"
            },
            "ProductDesc": {
              "type": "string",
              "example": "This is a sample product description."
            },
            "ProductUrl": {
              "type": "string",
              "example": "https://example.com/sample-product"
            },
            "ProductType": {
              "type": "string",
              "enum": ["prime", "B2C", "B2I", "B2I2C", "C247"],
              "example": "B2I2C"
            },
            "price": {
              "type": "number",
              "example": 99.99
            },
            "ProductDiscount": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "Number",
                  "description": "1 -> rupees , 2-> percentage",
                  "example" : 1
                },
                "value": {
                  "type": "number",
                  "example": 60
                }
              }
            },
            "ProductValidity": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "Number",
                  "example" : 20
                },
                "unit": {
                  "type": "string",
                  "description": "days or months",
                  "example": "months"
                }
              }
            },
            "ProductCategory": {
              "type": "Number",
              "enum": [1, 2],
              "description": "1 -> timeBased , 2-> oneTime",
              "example": 2
            },
            "ProductImg": {
              "type": "string",
              "example": "https://example.com/sample-image.jpg"
            },
            "ProductName": {
              "type": "string",
              "example": "New Product"
            },
            "ProductId": {
              "type": "string",
              "example": "f4a214ab-d549-4add-9dcf-da88ece95465"
            },
            "CreatedBy": {
              "type": "string",
              "example": "6777cab9a1f26a67c7038f98"
            },
            "NeverExpiry" : {
              "type": "boolean",
              "example": false
            },
            "vertical" : {
              "type": "Number",
              "description" : "1-> prepInstaPrime , 2 -> prepInstaProducts , 3 -> C247",
              "example": 1
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-06-10T06:58:13.314Z"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "example": "2025-06-10T06:58:13.314Z"
            },
            "__v": {
              "type": "integer",
              "example": 0
            }
          }
        }
      }      
    },
    "SingleProductUpdateSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Product updated successfully"
            }
          }
        }
      }
    },
    "ProductDeleteSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "Number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Product deleted successfully"
            }
          }
        }
      }
    },
    "CollegeCourseCompletionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "Migration done"
            },
            "users": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "testing@gmail.com"
              }
            }
          }
        }
      }
    },
    "LogListResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number",
              "example": 1
            },
            "logs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "68651998d34f7ce144062ce0"
                  },
                  "method": {
                    "type": "string",
                    "example": "GET"
                  },
                  "url": {
                    "type": "string",
                    "example": "/api/v2/logs?email=arshad.ansari@adda247.com&all=true"
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "subadmin"
                      }
                    }
                  },
                  "query": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "arshad.ansari@adda247.com"
                      },
                      "all": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "accesstoken": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbl9pZCI6IjY3NzdjYWI5YTFmMjZhNjdjNzAzOGY5OCIsImNyZWF0ZWQiOiIyMDI1LTA3LTAxVDA4OjE1OjI5LjUyMloiLCJ0eXBlIjoic3ViYWRtaW4iLCJpYXQiOjE3NTEzNTc3Mjl9.VUcpBExZB1e-1fiIT8xlktaiaC-yVgiftRYTw4VMl6I"
                      },
                      "authorization": {
                        "type": "string",
                        "example": "Basic cHJlcEluc3RhOnByZXAxMjNASW5zdGE="
                      },
                      "user-agent": {
                        "type": "string",
                        "example": "PostmanRuntime/7.44.0"
                      },
                      "accept": {
                        "type": "string",
                        "example": "*/*"
                      },
                      "postman-token": {
                        "type": "string",
                        "example": "daa97e1b-e78d-45f7-b882-02a7d81c114f"
                      },
                      "host": {
                        "type": "string",
                        "example": "localhost:4201"
                      },
                      "accept-encoding": {
                        "type": "string",
                        "example": "gzip, deflate, br"
                      },
                      "connection": {
                        "type": "string",
                        "example": "keep-alive"
                      },
                      "cookie": {
                        "type": "string",
                        "example": "ssoToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjgxY2FiNjVkMzY1ODRiYmEzZmMzMTNlIiwiY3JlYXRlZCI6IjIwMjUtMDUtMDlUMDY6NDE6NTYuNTA5WiIsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJhcnNoYWQxMmV0cmY1NTVAZ21haWwuY29tIiwidG9rZW5fdHlwZSI6InNzbyIsImlhdCI6MTc0Njc3MjkxNiwiZXhwIjoxNzYyMzI0OTE2fQ.4qXNLZr6XbQUqffw6--2bmXnjDrn90cvOilZjOLoMiA"
                      }
                    }
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "6777cab9a1f26a67c7038f98"
                      },
                      "email": {
                        "type": "string",
                        "example": "arshad.ansari@adda247.com"
                      },
                      "type": {
                        "type": "string",
                        "example": "subadmin"
                      }
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-07-02T11:35:52.663Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-07-02T11:35:52.663Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "CreateOrderObj" : {
      "type" : "object",
      "properties" : {
        "payload" :{
          "type" : "string ",
          "example" : "ewogICJhbW91bnQiOiAxNTAsIAogICJjdXJyZW5jeSI6ICJJTlIiLAogICJDb3Vwb25Db2RlIjogIkZUMjAiLAogICJJbml0aWFsQW1vdW50IjogMjAwLAogICJQcm9kdWN0SWQiOiAiY2U3MzAxMTEtN2Y3MS00ODM4LWFjNzEtODJhMTU0Y2VjOTZhIgp9",
          "description" : "Encode to Base64 payload and it contain (required - amount,currency,InitialAmount,ProductId and CouponCode (optional))"
        }
      }
    },
    "CreateOrderSuccessRes": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "HTTP status code indicating the success of the request"
        },
        "res": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "example": 15000,
              "description": "Total amount of the order"
            },
            "amount_due": {
              "type": "integer",
              "example": 15000,
              "description": "Amount still due for the order"
            },
            "amount_paid": {
              "type": "integer",
              "example": 0,
              "description": "Amount already paid for the order"
            },
            "attempts": {
              "type": "integer",
              "example": 0,
              "description": "Number of payment attempts made"
            },
            "created_at": {
              "type": "integer",
              "example": 1751349811,
              "description": "Timestamp of when the order was created"
            },
            "currency": {
              "type": "string",
              "example": "INR",
              "description": "Currency of the order"
            },
            "entity": {
              "type": "string",
              "example": "order",
              "description": "The entity type for this object"
            },
            "id": {
              "type": "string",
              "example": "order_QnhIlpraByURGg",
              "description": "Unique identifier for the order"
            },
            "notes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [],
              "description": "List of notes related to the order"
            },
            "offer_id": {
              "type": "string",
              "example": null,
              "description": "Offer ID associated with the order, if any"
            },
            "receipt": {
              "type": "string",
              "example": "invoice_68271ad6d543d304bdeb5ac5_010725",
              "description": "Receipt identifier for the order"
            },
            "status": {
              "type": "string",
              "example": "created",
              "description": "Current status of the order"
            }
          }
        }
      }
    },
    "OrderListSuccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1
            },
            "orders": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ThroughPaymentLink": {
                    "type": "boolean",
                    "example": false
                  },
                  "currency": {
                    "type": "string",
                    "example": "INR"
                  },
                  "_id": {
                    "type": "string",
                    "example": "68637a337e42961ac801c1b8"
                  },
                  "OrderId": {
                    "type": "string",
                    "example": "order_QnhIlpraByURGg"
                  },
                  "UserId": {
                    "type": "string",
                    "example": "68271ad6d543d304bdeb5ac5"
                  },
                  "amount": {
                    "type": "integer",
                    "example": 150
                  },
                  "PaymentStatus": {
                    "type": "string",
                    "example": "pending"
                  },
                  "ProductId": {
                    "type": "string",
                    "example": "7cb3909c-da51-43e5-9dc0-ff6d1d8fb936"
                  },
                  "TransactionIdLogs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "created"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2025-07-01T06:03:31.085Z"
                        },
                        "message": {
                          "type": "string",
                          "example": "Order created successfully"
                        }
                      }
                    }
                  },
                  "email": {
                    "type": "string",
                    "example": "xyz@gmail.com"
                  },
                  "phone": {
                    "type": "integer",
                    "example": 9625254444
                  },
                  "ProductName": {
                    "type": "string",
                    "example": "Testing new product"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-07-01T06:03:31.095Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "OrderDeleteSuccess" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "Order deleted successfully"
            }
          }
        }
      }
    },
    "VerifyOrderObj" : {
      "type" : "object",
      "properties" : {
        "payload" :{
          "type" : "string ",
          "example" : "eyJyYXpvcnBheV9wYXltZW50X2lkIjoicGF5X1F0ZW9hcHlyN1RUenNvIiwicmF6b3JwYXlfb3JkZXJfaWQiOiJvcmRlcl9RdGVsVmtENTRqNU1zOCIsInJhem9ycGF5X3NpZ25hdHVyZSI6IjgxMjBmNjQ3ZDk4ZGRmNTFiYmFjNDliNzVmYjdjZDU2OTZhNTE2MGY2MDAwNDhlNTY1MDE1NGE0MzA3ZWE1ZTYiLCJTdWJzY3JpcHRpb25Mb2NhdGlvbiI6InByaW1lIn0=",
          "description" : "Encode to Base64 payload and it contain (required - razorpay_payment_id,razorpay_order_id,razorpay_signature,SubscriptionLocation)"
        }
      }
    },
    "VerifyOrderObjSuccess" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "success" : {
              "type" :"boolean",
              "example" : true
            },
            "message" : {
              "type" :"string",
              "example" : "Payment verified successfully"
            }
          }
        }
      }
    },
    "CreatePaymentLinkObj" : {
      "type" : "object",
      "properties" : {
        "payload" :{
          "type" : "string ",
          "example" : "ewogICJhbW91bnQiOiAzMDAsIAogICJlbWFpbCI6ICJhcnNoYWQuYW5zYXJpQGFkZGEyNDcuY29tIiwKICAicGhvbmUiOiA5NjI1MjUzNjc4LAogICJVc2VySWQiOiI2ODI3MWFkNmQ1NDNkMzA0YmRlYjVhYzUiLAogICJQcm9kdWN0SWQiOiAiN2NiMzkwOWMtZGE1MS00M2U1LTlkYzAtZmY2ZDFkOGZiOTM2IiwKICAgImRlc2NyaXB0aW9uIiA6ICJUaGlzIGlzIHRlc3QgcGF5bWVudCBMaW5rIiwKICAgIlByb2R1Y3ROYW1lIiA6ICJUZXN0aW5nIG5ldyBwcm9kdWN0IiwKICAgIkNyZWF0ZWRGb3IiIDogImFiY0BnbWFpbC5jb20iCn0=",
          "description" : "Encode to Base64 payload and it contain (required - amount,email,phone,UserId,ProductId,description,ProductName,CreatedFor) for partial Payment use this payload : eyJhbW91bnQiOiA3MCwgImVtYWlsIjogImFyc2hhZC5hbnNhcmlAYWRkYTI0Ny5jb20iLCAicGhvbmUiOiA5NjI1MjUzNjc4LCAiVXNlcklkIjogIjY4MjcxYWQ2ZDU0M2QzMDRiZGViNWFjNSIsICJQcm9kdWN0SWQiOiAiY2U3MzAxMTEtN2Y3MS00ODM4LWFjNzEtODJhMTU0Y2VjOTZhIiwgImRlc2NyaXB0aW9uIjogIlRoaXMgaXMgYSBzYW1wbGUgcHJvZHVjdCBkZXNjcmlwdGlvbi4iLCAiUHJvZHVjdE5hbWUiOiAiRmlyc3QgVGVzdGluZyBQcm9kdWN0IiwgIklzUGFydGlhbFBheW1lbnQiOiB0cnVlLCAiVHJpYWxQZXJpb2REYXlzIjogMTUsICJFeHRlbmRlZFRyaWFsRGF5cyI6IDUsICJQYXltZW50Tm8iOiAzLCAiSXNMYXN0UGF5bWVudCI6IHRydWUsICJOb09mUGF5bWVudHMiOiAzLCJQZW5kaW5nQW1vdW50Ijo3MCwgInBheW1lbnRzIjogW3sicGF5bWVudCI6IDEsICJhbW91bnQiOiAzMCwgInBhaWQiOiB0cnVlLCAiZGF0ZSI6ICIyMDI1LTA4LTA4VDA5OjQyOjA3LjczM1oiLCAib3JkZXJJZCI6ICJvcmRlcl9SMm5LNzQzRkxnM3VoUCIsICJwYXltZW50SWQiOiAicGF5X1IybnBVYXM2dVVDN1N0In0sIHsicGF5bWVudCI6IDIsICJhbW91bnQiOiAxMDAsICJwYWlkIjogdHJ1ZSwgIm9yZGVySWQiOiAib3JkZXJfUjJucE01Vkw5ajdzVlUiLCAicGF5bWVudElkIjogInBheV9SMm5wVWFzNnVVQzdTdCJ9LCB7InBheW1lbnQiOiAzLCAiYW1vdW50IjogNzAsICJwYWlkIjogZmFsc2V9XX0="
        }
      }
    },
    "CreatePaymentLinkSuccess" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "Payment link created successfully"
            }
          }
        }
      }
    },
    "PaymentLinkListRes": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "example": 1
            },
            "paymentLink": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "PaymentStatus": {
                    "type": "string",
                    "example": "pending"
                  },
                  "IsUsed": {
                    "type": "boolean",
                    "example": false
                  },
                  "IsCancelled": {
                    "type": "boolean",
                    "example": false
                  },
                  "_id": {
                    "type": "string",
                    "example": "6863a90ad227fb3ef626cefc"
                  },
                  "UserId": {
                    "type": "string",
                    "example": "68271ad6d543d304bdeb5ac5"
                  },
                  "ProductId": {
                    "type": "string",
                    "example": "7cb3909c-da51-43e5-9dc0-ff6d1d8fb936"
                  },
                  "amount": {
                    "type": "integer",
                    "example": 300
                  },
                  "email": {
                    "type": "string",
                    "example": "arshad.ansari@adda247.com"
                  },
                  "ProductName": {
                    "type": "string",
                    "example": "Testing new product"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is test payment Link"
                  },
                  "CreatedBy": {
                    "type": "string",
                    "example": "arshad.ansari@adda247.com"
                  },
                  "PaymentLinkId": {
                    "type": "string",
                    "example": "plink_Qnkht3zSn2WLXv"
                  },
                  "PaymentUrl": {
                    "type": "string",
                    "example": "https://rzp.io/rzp/em7IR49"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-07-01T09:23:22.975Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-07-01T09:23:22.975Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "SinglePaymentLinkRes": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "PaymentStatus": {
              "type": "string",
              "example": "pending"
            },
            "IsUsed": {
              "type": "boolean",
              "example": false
            },
            "IsCancelled": {
              "type": "boolean",
              "example": false
            },
            "refund": {
              "type": "boolean",
              "example": false
            },
            "status": {
              "type": "boolean",
              "example": true
            },
            "isDeleted": {
              "type": "boolean",
              "example": false
            },
            "_id": {
              "type": "string",
              "example": "6863a90ad227fb3ef626cefc"
            },
            "UserId": {
              "type": "string",
              "example": "68271ad6d543d304bdeb5ac5"
            },
            "ProductId": {
              "type": "string",
              "example": "7cb3909c-da51-43e5-9dc0-ff6d1d8fb936"
            },
            "amount": {
              "type": "integer",
              "example": 300
            },
            "email": {
              "type": "string",
              "example": "arshad.ansari@adda247.com"
            },
            "ProductName": {
              "type": "string",
              "example": "Testing new product"
            },
            "description": {
              "type": "string",
              "example": "This is test payment Link"
            },
            "CreatedBy": {
              "type": "string",
              "example": "arshad.ansari@adda247.com"
            },
            "PaymentLinkId": {
              "type": "string",
              "example": "plink_Qnkht3zSn2WLXv"
            },
            "PaymentUrl": {
              "type": "string",
              "example": "https://rzp.io/rzp/em7IR49"
            },
            "createdAt": {
              "type": "string",
              "example": "2025-07-01T09:23:22.975Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2025-07-01T09:23:22.975Z"
            },
            "__v": {
              "type": "integer",
              "example": 0
            }
          }
        }
      }
    },
    "PaymentLinkDeleteSucc" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "Payment link has been deleted successfully"
            }
          }
        }
      }
    },
    "PaymentLinkCancelSucc" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "Payment link has been cancelled successfully"
            }
          }
        }
      }
    },
    "FileUploadListRes": {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "total" : {
              "type" :"number",
              "example" : 30
            },
            "fileUploads" : {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "SuccessfulInsertions": {
                    "type": "integer",
                    "example": 0
                  },
                  "TotalRecords": {
                    "type": "integer",
                    "example": 123
                  },
                  "ValidationErrors": {
                    "type": "integer",
                    "example": 0
                  },
                  "ErrorsCount": {
                    "type": "integer",
                    "example": 123
                  },
                  "UserSentToQueue": {
                    "type": "integer",
                    "example": 29
                  },
                  "UserReceivedFromQueue": {
                    "type": "integer",
                    "example": 29
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "status": {
                    "type": "boolean",
                    "example": true
                  },
                  "_id": {
                    "type": "string",
                    "example": "688a03cd34de1600138d2ee9"
                  },
                  "ImportBy": {
                    "type": "string",
                    "example": "gurdeep.singh@adda247.com"
                  },
                  "S3FilePath": {
                    "type": "string",
                    "example": "https://s3.ap-south-1.amazonaws.com/optimus-files.prepinstaprime.com/userimport/file_1753875405267_2.csv"
                  },
                  "Notes": {
                    "type": "string",
                    "example": "asas"
                  },
                  "ImporterUserId": {
                    "type": "string",
                    "example": "682707ed31cbf77549f4b14d"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-07-30T11:36:45.378Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-07-30T11:36:52.338Z"
                  },
                  "__v": {
                    "type": "integer",
                    "example": 0
                  },
                  "ValidationErrorFilePath": {
                    "type": "string",
                    "example": "https://s3.ap-south-1.amazonaws.com/optimus-files.prepinstaprime.com/userimport/validation_errors-688a03cd34de1600138d2ee9.csv"
                  },
                  "DuplicacyErrorFilePath": {
                    "type": "string",
                    "example": "https://s3.ap-south-1.amazonaws.com/optimus-files.prepinstaprime.com/userimport/duplicacy_688a03cd34de1600138d2ee9.csv"
                  }
                }
              }
            }
          }
        }
      }
    },
    "FailedUsersSyncObject": {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "total" : {
              "type" :"number",
              "example" : 30
            },
            "fileUploads" : {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "688a03d461652fd45ef3cd0b"
                  },
                  "UserImportFileUploadId": {
                    "type": "string",
                    "example": "688a03cd34de1600138d2ee9"
                  },
                  "ErrorLogs": {
                    "type": "object",
                    "properties": {
                      "errCode": {
                        "type": "integer",
                        "example": 406
                      },
                      "msg": {
                        "type": "string",
                        "example": "Your email id exist with XXXXXX0605 please use this phone number"
                      },
                      "status": {
                        "type": "integer",
                        "example": 406
                      },
                      "errs": {
                        "type": "object",
                        "properties": {
                          "failedIn": {
                            "type": "string",
                            "example": "Prime"
                          }
                        }
                      }
                    }
                  },
                  "UserDetails": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "Olivia"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Williams"
                      },
                      "email": {
                        "type": "string",
                        "example": "olivia.williams243@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "9339262346"
                      },
                      "yop": {
                        "type": "string",
                        "example": "2006"
                      },
                      "registrationNo": {
                        "type": "string",
                        "example": "OJVWHMW"
                      },
                      "semester": {
                        "type": "string",
                        "example": "6"
                      },
                      "branchId": {
                        "type": "string",
                        "example": "9"
                      },
                      "revenueType": {
                        "type": "string",
                        "example": "new"
                      },
                      "collegeId": {
                        "type": "integer",
                        "example": 90
                      },
                      "collegeName": {
                        "type": "string",
                        "example": "Test New College Dev"
                      },
                      "productId": {
                        "type": "string",
                        "example": "b7485e6d-bd52-4f09-8420-81c9e064a37e"
                      },
                      "productDuration": {
                        "type": "object",
                        "properties": {
                          "duration": {
                            "type": "integer",
                            "example": 3
                          },
                          "unit": {
                            "type": "string",
                            "example": "months"
                          }
                        }
                      },
                      "paymentType": {
                        "type": "string",
                        "example": "B2C"
                      },
                      "amount": {
                        "type": "integer",
                        "example": 10000
                      },
                      "isPrime": {
                        "type": "boolean",
                        "example": true
                      },
                      "prepInstaFullAccess": {
                        "type": "boolean",
                        "example": false
                      },
                      "prepInstaProductId": {
                        "type": "string",
                        "example": "1234"
                      }
                    }
                  },
                  "email": {
                    "type": "string",
                    "example": "olivia.williams243@example.com"
                  },
                  "phone": {
                    "type": "integer",
                    "example": 9339262346
                  }
                }
              }
            }
          }
        }
      }
    },
    "CreateUserSubscriptionObj": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "string",
          "required": true,
          "example": "507f1f77bcf86cd799439011",
          "description": "The unique identifier of the user."
        },
        "ProductId": {
          "type": "string",
          "required": false,
          "example": "1234",
          "description": "The unique identifier of the product."
        },
        "CouponId": {
          "type": "string",
          "required": false,
          "example": "507f1f77bcf86cd799439012",
          "description": "The unique identifier of the coupon, if any."
        },
        "CouponCode": {
          "type": "string",
          "required": false,
          "example": "DISCOUNT2025",
          "description": "The coupon code applied to the subscription."
        },
        "OrderId": {
          "type": "string",
          "required": false,
          "example": "order_123456789",
          "description": "The unique identifier for the order."
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-01-01T00:00:00.000Z",
          "description": "The start date of the subscription."
        },
        "ExpirationDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-12-31T23:59:59.999Z",
          "description": "The expiration date of the subscription."
        },
        "PurchaseDate": {
          "type": "string",
          "format": "date-time",
          "required": false,
          "example": "2025-08-22T12:00:00.000Z",
          "description": "The date when the subscription was purchased."
        },
        "AccessDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-01-01T00:00:00.000Z",
          "description": "The date when the user will have access to the subscription."
        },
        "PaymentReceivedDate": {
          "type": "string",
          "format": "date-time",
          "required": false,
          "example": "2025-08-22T12:00:00.000Z",
          "description": "The date when the payment was received."
        },
        "PaymentMethod": {
          "type": "string",
          "required": false,
          "example": "credit_card",
          "description": "The method of payment used for the subscription."
        },
        "AccessType": {
          "type": "string",
          "enum": ["B2C", "B2B", "B2I", "B2I2C", "internal"],
          "required": true,
          "example": "B2C",
          "description": "The access type for the subscription."
        },
        "price": {
          "type": "number",
          "required": true,
          "example": 200,
          "description": "The price of the subscription."
        },
        "IsRevenue": {
          "type": "boolean",
          "required": false,
          "example": true,
          "description": "Indicates whether the subscription is revenue-generating."
        },
        "IsDemoAccess": {
          "type": "boolean",
          "required": false,
          "example": false,
          "description": "Indicates whether the subscription is a demo access."
        },
        "SubscriptionSource": {
          "type": "string",
          "required": true,
          "example": "admin-internal",
          "description": "The source of the subscription, e.g., 'razorpay', 'admin-internal'."
        },
        "SubscriptionLocation": {
          "type": "string",
          "required": false,
          "example": "website",
          "description": "The location from where the subscription was initiated."
        },
        "PlanDuration": {
          "type": "string",
          "required": false,
          "example": "1 year",
          "description": "The duration of the subscription plan."
        },
        "CustomExtraDays": {
          "type": "number",
          "required": false,
          "example": 0,
          "description": "Any additional days added to the subscription period."
        }
      }
    },
    "SingleUserSubscriptionSuccess" : {
      "type": "object",
      "properties": {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "CustomExtraDays": {
              "type": "number",
              "required": false,
              "example": 0,
              "description": "Any additional days added to the subscription period."
            },
            "IsScheduled": {
              "type": "boolean",
              "required": false,
              "example": false,
              "description": "Indicates whether the subscription is scheduled."
            },
            "IsPartialPayment": {
              "type": "boolean",
              "required": false,
              "example": false,
              "description": "Indicates whether the subscription is a partial payment."
            },
            "expired": {
              "type": "boolean",
              "required": false,
              "example": false,
              "description": "Indicates whether the subscription has expired."
            },
            "isDeleted": {
              "type": "boolean",
              "required": false,
              "example": false,
              "description": "Indicates whether the subscription has been deleted."
            },
            "status": {
              "type": "boolean",
              "required": false,
              "example": true,
              "description": "Indicates the status of the subscription (active/inactive)."
            },
            "_id": {
              "type": "string",
              "required": true,
              "example": "68a859fa9a6c250013381264",
              "description": "The unique identifier of the subscription."
            },
            "UserId": {
              "type": "string",
              "required": true,
              "example": "68a859fa9a6c250013381261",
              "description": "The unique identifier of the user."
            },
            "ProductId": {
              "type": "string",
              "required": true,
              "example": "a2976202-6939-4c24-8e23-f65573598db9",
              "description": "The unique identifier of the product."
            },
            "AccessType": {
              "type": "string",
              "enum": ["B2C", "B2B", "B2I", "B2I2C", "internal"],
              "required": true,
              "example": "B2C",
              "description": "The access type for the subscription."
            },
            "IsRevenue": {
              "type": "boolean",
              "required": false,
              "example": true,
              "description": "Indicates whether the subscription is revenue-generating."
            },
            "IsDemoAccess": {
              "type": "boolean",
              "required": false,
              "example": false,
              "description": "Indicates whether the subscription is a demo access."
            },
            "SubscriptionSource": {
              "type": "string",
              "required": true,
              "example": "admin-import",
              "description": "The source of the subscription, e.g., 'razorpay', 'admin-internal'."
            },
            "PlanDuration": {
              "type": "string",
              "required": true,
              "example": "24 months",
              "description": "The duration of the subscription plan."
            },
            "email": {
              "type": "string",
              "required": true,
              "example": "keith.brown@example.com",
              "description": "The email address associated with the user."
            },
            "phone": {
              "type": "number",
              "required": true,
              "example": 2722742790,
              "description": "The phone number associated with the user."
            },
            "price": {
              "type": "number",
              "required": true,
              "example": 1000,
              "description": "The price of the subscription."
            },
            "StartDate": {
              "type": "string",
              "format": "date-time",
              "required": true,
              "example": "2025-08-22T11:52:26.935Z",
              "description": "The start date of the subscription."
            },
            "ExpirationDate": {
              "type": "string",
              "format": "date-time",
              "required": true,
              "example": "2027-08-22T11:52:26.935Z",
              "description": "The expiration date of the subscription."
            },
            "AccessDate": {
              "type": "string",
              "format": "date-time",
              "required": true,
              "example": "2025-08-22T11:52:26.935Z",
              "description": "The date when the user will have access to the subscription."
            },
            "PurchaseDate": {
              "type": "string",
              "format": "date-time",
              "required": false,
              "example": "2025-08-22T11:52:26.935Z",
              "description": "The date when the subscription was purchased."
            },
            "prime": {
              "type": "boolean",
              "required": false,
              "example": true,
              "description": "Indicates whether the subscription is a prime subscription."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "required": false,
              "example": "2025-08-22T11:52:26.941Z",
              "description": "The date when the subscription was created."
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "required": false,
              "example": "2025-08-22T11:52:26.941Z",
              "description": "The date when the subscription was last updated."
            },
            "__v": {
              "type": "number",
              "required": false,
              "example": 0,
              "description": "The internal version key."
            }
          }
        }
      }
    },
    "UpdateUserSubscriptionObj": {
      "type": "object",
      "properties": {
        "ProductId": {
          "type": "string",
          "required": false,
          "example": "1234",
          "description": "The unique identifier of the product."
        },
        "ProductName": {
          "type": "string",
          "required": false,
          "example": "testing",
          "description": "ProductName."
        },
        "CouponId": {
          "type": "string",
          "required": false,
          "example": "507f1f77bcf86cd799439012",
          "description": "The unique identifier of the coupon, if any."
        },
        "CouponCode": {
          "type": "string",
          "required": false,
          "example": "DISCOUNT2025",
          "description": "The coupon code applied to the subscription."
        },
        "OrderId": {
          "type": "string",
          "required": false,
          "example": "order_123456789",
          "description": "The unique identifier for the order."
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-01-01T00:00:00.000Z",
          "description": "The start date of the subscription."
        },
        "ExpirationDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-12-31T23:59:59.999Z",
          "description": "The expiration date of the subscription."
        },
        "PurchaseDate": {
          "type": "string",
          "format": "date-time",
          "required": false,
          "example": "2025-08-22T12:00:00.000Z",
          "description": "The date when the subscription was purchased."
        },
        "AccessDate": {
          "type": "string",
          "format": "date-time",
          "required": true,
          "example": "2025-01-01T00:00:00.000Z",
          "description": "The date when the user will have access to the subscription."
        },
        "PaymentReceivedDate": {
          "type": "string",
          "format": "date-time",
          "required": false,
          "example": "2025-08-22T12:00:00.000Z",
          "description": "The date when the payment was received."
        },
        "PaymentMethod": {
          "type": "string",
          "required": false,
          "example": "credit_card",
          "description": "The method of payment used for the subscription."
        },
        "AccessType": {
          "type": "string",
          "enum": ["B2C", "B2B", "B2I", "B2I2C", "internal"],
          "required": true,
          "example": "B2C",
          "description": "The access type for the subscription."
        },
        "price": {
          "type": "number",
          "required": true,
          "example": 200,
          "description": "The price of the subscription."
        },
        "IsRevenue": {
          "type": "boolean",
          "required": false,
          "example": true,
          "description": "Indicates whether the subscription is revenue-generating."
        },
        "IsDemoAccess": {
          "type": "boolean",
          "required": false,
          "example": false,
          "description": "Indicates whether the subscription is a demo access."
        },
        "SubscriptionSource": {
          "type": "string",
          "required": true,
          "example": "admin-internal",
          "description": "The source of the subscription, e.g., 'razorpay', 'admin-internal'."
        },
        "SubscriptionLocation": {
          "type": "string",
          "required": false,
          "example": "website",
          "description": "The location from where the subscription was initiated."
        },
        "PlanDuration": {
          "type": "string",
          "required": false,
          "example": "1 year",
          "description": "The duration of the subscription plan."
        },
        "CustomExtraDays": {
          "type": "number",
          "required": false,
          "example": 0,
          "description": "Any additional days added to the subscription period."
        },
        "remarks": {
          "type": "array",
          "items": {
            "type": "any"
          },
          "required": false,
          "description": "Reasons for activating or deactivating the user subscription"
        },
        "status": {
          "type": "boolean",
          "required": false,
          "example": false,
          "description": "Active or Deactivate user subscription"
        },
        "isDeleted": {
          "type": "boolean",
          "required": false,
          "example": false,
          "description": "Active or Deactivate user subscription"
        }
      }
    },
    "UserSubscriptionList": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number",
              "example": 7
            },
            "userSubscriptions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "CustomExtraDays": {
                    "type": "number",
                    "required": false,
                    "example": null,
                    "description": "Any additional days added to the subscription period."
                  },
                  "IsScheduled": {
                    "type": "boolean",
                    "required": false,
                    "example": true,
                    "description": "Indicates whether the subscription is scheduled."
                  },
                  "IsPartialPayment": {
                    "type": "boolean",
                    "required": false,
                    "example": false,
                    "description": "Indicates whether the subscription is a partial payment."
                  },
                  "expired": {
                    "type": "boolean",
                    "required": false,
                    "example": false,
                    "description": "Indicates whether the subscription has expired."
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "required": false,
                    "example": true,
                    "description": "Indicates whether the subscription has been deleted."
                  },
                  "status": {
                    "type": "boolean",
                    "required": false,
                    "example": false,
                    "description": "Indicates the status of the subscription (active/inactive)."
                  },
                  "_id": {
                    "type": "string",
                    "required": true,
                    "example": "68ac312a2803c65fa4b417fd",
                    "description": "The unique identifier of the subscription."
                  },
                  "OrderId": {
                    "type": "string",
                    "required": true,
                    "example": "order_R9WUS6CcH01c4b",
                    "description": "The unique identifier for the order."
                  },
                  "UserId": {
                    "type": "string",
                    "required": true,
                    "example": "68271ad6d543d304bdeb5ac5",
                    "description": "The unique identifier of the user."
                  },
                  "AccessDate": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-08-25T09:47:21.351Z",
                    "description": "The date when the user will have access to the subscription."
                  },
                  "AccessType": {
                    "type": "string",
                    "enum": ["B2C", "B2B", "B2I", "B2I2C", "internal"],
                    "required": true,
                    "example": "B2C",
                    "description": "The access type for the subscription."
                  },
                  "PaymentMethod": {
                    "type": "string",
                    "required": true,
                    "example": "upi",
                    "description": "The payment method used for the subscription."
                  },
                  "PaymentReceivedDate": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-08-25T09:47:03.000Z",
                    "description": "The date when payment was received."
                  },
                  "PlanDuration": {
                    "type": "string",
                    "required": true,
                    "example": "3 months",
                    "description": "The duration of the subscription plan."
                  },
                  "ProductId": {
                    "type": "string",
                    "required": true,
                    "example": "3d0945b0-731a-4a5e-8f30-523281b5b8c0",
                    "description": "The unique identifier of the product."
                  },
                  "PurchaseDate": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-08-25T09:47:03.000Z",
                    "description": "The date when the subscription was purchased."
                  },
                  "StartDate": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-10-25T09:46:17.290Z",
                    "description": "The start date of the subscription."
                  },
                  "SubscriptionSource": {
                    "type": "string",
                    "required": true,
                    "example": "razorpay",
                    "description": "The source of the subscription."
                  },
                  "email": {
                    "type": "string",
                    "required": true,
                    "example": "adbf@gmail.com",
                    "description": "The email address associated with the user."
                  },
                  "phone": {
                    "type": "number",
                    "required": true,
                    "example": 9688888888,
                    "description": "The phone number associated with the user."
                  },
                  "price": {
                    "type": "number",
                    "required": true,
                    "example": 4499,
                    "description": "The price of the subscription."
                  },
                  "prime": {
                    "type": "boolean",
                    "required": false,
                    "example": true,
                    "description": "Indicates whether the subscription is a prime subscription."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-08-25T09:47:22.163Z",
                    "description": "The date when the subscription was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "required": true,
                    "example": "2025-08-25T09:47:22.163Z",
                    "description": "The date when the subscription was last updated."
                  },
                  "__v": {
                    "type": "number",
                    "required": false,
                    "example": 0,
                    "description": "The internal version key."
                  }
                }
              }
            }
          }
        }
      }
    },
    "CreateUserSubscriptionSuccess" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "User subscription created successfully"
            }
          }
        }
      }
    },
    "UserSubscriptionDeleteSucc" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "Number",
          "example" : 200
        },
        "res" : {
          "type" : "object",
          "properties" : {
            "msg" : {
              "type" :"string",
              "example" : "User subscription has been deleted successfully"
            }
          }
        }
      }
    },
    "UserSubscriptionUpdatedSucc": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200
        },
        "res": {
          "type": "object",
          "properties": {
            "msg": {
              "type": "string",
              "example": "User subscription updated successfully"
            }
          }
        }
      }
    }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
    }